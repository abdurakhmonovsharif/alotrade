{"version":3,"file":"static/js/730.b9dee969.chunk.js","mappings":"gMAuBA,MACA,EADmBA,EAAAA,YAtBnB,SAA4B,EAIzBC,GAAQ,IAJiB,MAC1BC,EAAK,QACLC,KACGC,GACJ,EACC,OAAoBJ,EAAAA,cAAoB,MAAOK,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACfC,IAAKX,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBF,EAAAA,cAAoB,QAAS,CAC3Da,GAAIV,GACHD,GAAS,KAAmBF,EAAAA,cAAoB,OAAQ,CACzDc,cAAe,QACfC,eAAgB,QAChBC,EAAG,gDAEP,I,2CCZA,MA0CA,EA1C0B,IAAe,IAAd,KAAEC,GAAM,EACjC,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MAEZ,EAAEC,IAAMC,EAAAA,EAAAA,KAERC,IADeC,EAAAA,EAAAA,GAAgBH,IACpBI,EAAAA,EAAAA,QACVC,EAAMC,IAAWC,EAAAA,EAAAA,UAASL,EAASM,UACpCC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKC,UAAU,+GAA8G,WAC1HC,EAAAA,EAAAA,KAAIf,GAAOgB,IACV,UAAC,KAAI,CACHC,QAAS,KAAMC,OARFC,EAQcH,EAAKR,UAPtCC,EAAQU,GADWA,KAQyB,EAEtCL,UAAS,yCACNT,EAASM,WAAaK,EAAKR,KAAQ,2BACpC,0BAAyB,wHAEzBQ,EAAKI,OAASJ,EAAKI,OAErBC,GAAIL,EAAKR,KAAK,WAEd,iBAAMM,UAAU,wBAAuB,SAAEE,EAAKM,OAC7CN,EAAK/B,SAVDsC,EAAAA,EAAAA,UAAS,yBAalB,oBACEN,QAAS,IAAML,GAASY,EAAAA,EAAAA,OACxBV,UAAU,qGAAoG,WAE9G,SAAC,EAAkB,CAACA,UAAU,cAC9B,kEAEE,E,cC5CV,MAiBA,EAjBsB,IAAiB,IAAhB,OAAEW,GAAQ,EAC/B,OACE,gBAAKX,UAAU,kDAAiD,UAC9D,SAAC,KAAM,WACJC,EAAAA,EAAAA,KAAIU,GAASC,IACZ,SAAC,KAAK,CACJC,OAAK,EAELnB,KAAMkB,EAAMlB,KACZoB,QAASF,EAAME,UAFVL,EAAAA,EAAAA,UAAS,iBAMhB,ECSV,EAnBgB,KACd,MACEM,UAAU,aAAEC,KACVC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SACnB/B,EAAAA,EAAAA,KAEd,OACE,gBAAKY,UAAU,sBAAqB,UAClC,iBAAKA,UAAU,qEAAoE,WAGjF,SAAC,EAAiB,CAACd,KAAM8B,EAAeI,EAAAA,GAAmBC,EAAAA,MAE3D,SAAC,EAAa,CAACV,OAAQA,EAAAA,SAErB,C","sources":["../node_modules/@heroicons/react/24/outline/esm/ArrowSmallLeftIcon.js","Components/Profile/ProfileRouteLinks.js","Components/Profile/ProfileRoutes.js","Pages/User/Profile/Profile.js"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowSmallLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ArrowSmallLeftIcon);\nexport default ForwardRef;","import React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { map, uniqueId } from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\nimport { getTranslations } from \"../../translation\";\nimport { ArrowSmallLeftIcon } from \"@heroicons/react/24/outline\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../../Pages/Sign/signSlice\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\n\nconst ProfileRouteLinks = ({ menu }) => {\n  const { width } = useWindowSize();\n\n  const { t } = useTranslation();\n  const translations = getTranslations(t);\n  const location = useLocation();\n  const [path, setPath] = useState(location.pathname);\n  const dispatch = useDispatch();\n\n  const linkHandler = (e) => {\n    setPath(e);\n  };\n\n  return (\n    <div className='hidden md:flex overflow-x-scroll md:max-w-[300px] md:w-1/3 w-full py-4 md:py-0 md:flex-col px-2 bg-alotrade '>\n      {map(menu, (item) => (\n        <Link\n          onClick={() => linkHandler(item.path)}\n          key={uniqueId(\"profileRouteLinks\")}\n          className={` flex shadow-lg min-w-[100px]  ${\n            (location.pathname === item.path && \"bg-orange-500 text-white\") ||\n            \"bg-white text-alotrade \"\n          } font-bold text-white my-1 w-full justify-center md:justify-start items-center text-[12px] md:text-base py-3 ${\n            item.class && item.class\n          }`}\n          to={item.path}\n        >\n          <span className='px-2 hidden md:inline'>{item.icon}</span>\n          {item.title}\n        </Link>\n      ))}\n      <button\n        onClick={() => dispatch(logOut())}\n        className='text-[14px] text-red-400 flex flex-row items-center gap-2 px-3 py-2 rounded-lg bg-white mt-20 mb-3'\n      >\n        <ArrowSmallLeftIcon className='w-[25px]' />\n        <span>Выйти</span>\n      </button>\n    </div>\n  );\n};\n\nexport default ProfileRouteLinks;\n","import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { map, uniqueId } from \"lodash\";\n\nconst ProfileRoutes = ({ routes }) => {\n  return (\n    <div className=\"w-full bg-white-900 rounded shadow-lg pb-[70px]\">\n      <Routes>\n        {map(routes, (route) => (\n          <Route\n            exact\n            key={uniqueId(\"profile\")}\n            path={route.path}\n            element={route.element}\n          />\n        ))}\n      </Routes>\n    </div>\n  );\n};\n\nexport default ProfileRoutes;\n","import React from \"react\";\nimport ProfileRouteLinks from \"../../../Components/Profile/ProfileRouteLinks\";\nimport { menuOrganization, menuUser, routes } from \"./constants\";\nimport ProfileRoutes from \"../../../Components/Profile/ProfileRoutes\";\nimport { useSelector } from \"react-redux\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\n\nconst Profile = () => {\n  const {\n    userData: { organization },\n  } = useSelector((state) => state.login);\n  const width = useWindowSize();\n\n  return (\n    <div className='md:container h-full'>\n      <div className='h-[45px] bg-white md:w-full md:h-full md:flex flex-col md:flex-row'>\n        {/* <Outlet /> */}\n\n        <ProfileRouteLinks menu={organization ? menuOrganization : menuUser} />\n\n        <ProfileRoutes routes={routes} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":["React","svgRef","title","titleId","props","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","menu","width","useWindowSize","t","useTranslation","location","getTranslations","useLocation","path","setPath","useState","pathname","dispatch","useDispatch","className","map","item","onClick","linkHandler","e","class","to","icon","uniqueId","logOut","routes","route","exact","element","userData","organization","useSelector","state","login","menuOrganization","menuUser"],"sourceRoot":""}