{"version":3,"file":"static/js/878.f137fbe2.chunk.js","mappings":"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","sources":["Pages/User/Organizations/Organization.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOrganizationById } from \"./organizationSlice\";\nimport noImage from \"../../../assets/images/no-image.svg\";\nimport {\n  IoCallSharp,\n  IoGlobeOutline,\n  IoLocationOutline,\n  IoLogoWebComponent,\n} from \"react-icons/io5\";\nimport { MdOutlineAlternateEmail } from \"react-icons/md\";\nimport { map, uniqueId } from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\nimport { getTranslations } from \"../../../translation\";\nimport background1 from \"../../../assets/background/1.png\";\nimport background2 from \"../../../assets/background/2.png\";\nimport background3 from \"../../../assets/background/3.png\";\nimport background4 from \"../../../assets/background/4.png\";\nimport UniversalModal from \"../../../Components/Modal/UniversalModal\";\nimport { Pagination } from \"@mui/material\";\nimport ProductCard from \"../../../Components/ProductCard/ProductCard\";\nimport { getProducts, getProductsCount } from \"../Products/productSlice\";\nimport { BsEnvelope, BsInstagram, BsTelegram } from \"react-icons/bs\";\nimport AnnouncementCard from \"../Announcements/AnnouncementCard\";\nimport { getAnns, getAnnsCount } from \"../Announcements/announcementSlice\";\nimport { getInstagramLink, getTelegramLink } from \"../../../Config/links\";\n\nconst Organization = () => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation([\"common\"]);\n  const { savdo_turi } = getTranslations(t);\n\n  const {\n    logged,\n    userData: { user },\n  } = useSelector((state) => state.login);\n\n  const { products } = useSelector((state) => state.products);\n  const { anns } = useSelector((state) => state.anns);\n\n  const {\n    product,\n    categories,\n    subcategories,\n    tradetypes,\n    regions,\n    districts,\n    name,\n  } = useSelector((state) => state.filter);\n  const [productId, setProductId] = useState(null);\n  const [totalDatas, setTotalDatas] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n\n  const [totalAnnsDatas, setTotalAnnsDatas] = useState(0);\n  const [currentAnnsPage, setCurrentAnnsPage] = useState(0);\n  const countPage = 10;\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalBody, setModalBody] = useState(null);\n\n  const [filterVisible, setFilterVisible] = useState(false);\n  const [filterBody, setFilterBody] = useState(null);\n\n  const closeHandler = () => {\n    setModalVisible(false);\n  };\n\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n  const [organization, setOrganization] = useState(null);\n\n  const [content, setContent] = useState(\"descr\");\n\n  const backgrounds = [background1, background2, background3, background4];\n  const background = backgrounds[Math.floor(Math.random() * 4)];\n\n  const location = useLocation();\n  const { _id } = location.state;\n\n  useEffect(() => {\n    dispatch(getOrganizationById({ id: _id })).then(\n      ({ error, payload: { organization } }) => {\n        if (!error) {\n          setOrganization(organization);\n        }\n      }\n    );\n  }, [_id, dispatch]);\n\n  useEffect(() => {\n    const data = {\n      page: currentPage,\n      count: countPage,\n      product,\n      categories,\n      subcategories,\n      tradetypes,\n      regions,\n      districts,\n      user: user?._id,\n      name,\n      organization: _id,\n    };\n\n    const dataAnn = {\n      page: currentAnnsPage,\n      count: countPage,\n      post: \"all\",\n      categories: [],\n      subcategories: [],\n      tradetypes: [],\n      regions: [],\n      districts: [],\n      user: user?._id,\n      name,\n      organization: _id,\n    };\n\n    dispatch(getProducts(data));\n    dispatch(getProductsCount(data)).then(\n      ({ payload: { totalCount }, error }) => {\n        if (!error) {\n          setTotalDatas(totalCount);\n        }\n      }\n    );\n\n    dispatch(getAnns(dataAnn));\n    dispatch(getAnnsCount(dataAnn)).then(\n      ({ payload: { totalCount }, error }) => {\n        if (!error) {\n          setTotalAnnsDatas(totalCount);\n        }\n      }\n    );\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, product, currentPage, countPage]);\n\n  return (\n    <div className='bg-white w-full h-full'>\n      <div className='bg-alotrade/10 md:m-4 rounded-xl shadow-md'>\n        <div className='container'>\n          <div className='w-full flex items-center gap-4 md:gap-6 flex-col md:flex-row md:justify-between py-6'>\n            <div className='flex flex-col md:flex-row gap-4 items-center w-full md:w-fit'>\n              <div className='rounded-full bg-white-900 p-1'>\n                <img\n                  className='w-[200px] h-[200px] rounded-full'\n                  src={organization?.image || noImage}\n                  alt=''\n                />\n              </div>\n              <div className='flex flex-col text-black font-bold w-full md:w-fit items-start px-8 md:px-2'>\n                <div className='w-full'>\n                  <span className='flex flex-row justify-center font-amazonbold text-[2rem] text-center w-full'>\n                    {organization?.name}\n                  </span>\n                  <h3 className='flex'>\n                    <span className='font-normal'>Тип торговли:</span>\n                    <p className='pl-2'>\n                      {map(organization?.tradetypes, (type) => (\n                        <span key={uniqueId()} className='font-amazonbold'>\n                          {type?.name},\n                        </span>\n                      ))}\n                    </p>\n                  </h3>\n                  <h3 className='flex'>\n                    <span className='font-normal'>Регион:</span>\n                    <p className='pl-2'>{organization?.region?.label}</p>\n                  </h3>\n\n                  <h3 className='flex'>\n                    <span className='font-normal'>Город:</span>\n                    <p className='pl-2'>{organization?.district?.label}</p>\n                  </h3>\n\n                  <h4 className='flex items-center my-2'>\n                    <IoGlobeOutline size={19} className='text-green-600' />\n                    <a\n                      target='_blank'\n                      href={\n                        (organization?.media?.site.startsWith(\"https://\")\n                          ? organization?.media?.site\n                          : `https://${organization?.media?.site}`) || \" - \"\n                      }\n                      className='ml-2 font-normal text-green-800'\n                    >\n                      {organization?.media?.site !== \"\"\n                        ? organization?.media?.site\n                        : \" - \"}\n                    </a>\n                  </h4>\n                  {/* {organization?.email && (\n                  <h4 className=\"flex items-center my-2\">\n                    <MdOutlineAlternateEmail size={19} />\n                    <a\n                      href={`mailto:${organization?.email}`}\n                      className=\"text-black font-amazonbold ml-2\"\n                    >\n                      {organization?.email}\n                    </a>\n                  </h4>\n                )} */}\n                </div>\n              </div>\n            </div>\n\n            <div className='flex flex-col items-start md:justify-end px-8 md:px-2 w-full md:w-fit'>\n              <span className='text-[16px] text-green-500 font-bold'>\n                Связаться\n              </span>\n\n              <h3 className='flex'>\n                <span className='font-normal'>Тел: </span>\n                <a\n                  href={`tel:${organization?.phone || \" - \"}`}\n                  className='ml-2 font-bold'\n                >\n                  {organization?.phone || \" - \"}\n                </a>\n              </h3>\n              <h3 className='flex'>\n                <span className='font-normal'>Тел: </span>\n                <a\n                  href={`tel:${organization?.phone2 || \" - \"}`}\n                  className='ml-2 font-bold'\n                >\n                  {organization?.phone2 || \" - \"}\n                </a>\n              </h3>\n              <h3 className='flex'>\n                <span className='font-normal'>Тел: </span>\n                <a\n                  href={`tel:${organization?.phone3 || \" - \"}`}\n                  className='ml-2 font-bold'\n                >\n                  {organization?.phone3 || \" - \"}\n                </a>\n              </h3>\n              <h4 className='flex items-center my-2'>\n                <BsEnvelope size={19} className='text-green-600' />\n                <span className='ml-2 font-bold'>\n                  {organization?.email || \" - \"}\n                </span>\n              </h4>\n              <div className='flex flex-row gap-3 items-center'>\n                {organization?.media?.instagram && (\n                  <a\n                    target='_blank'\n                    href={`${getInstagramLink(organization?.media?.instagram)}`}\n                    className='w-[30px] h-[30px] p-1 flex justify-center items-center  rounded-lg bg-gradient-to-tr from-pink-600 to-orange-300'\n                  >\n                    <BsInstagram className='w-full text-white' />\n                  </a>\n                )}\n                {organization?.media?.telegram && (\n                  <a\n                    target='_blank'\n                    href={`${getTelegramLink(organization?.media?.telegram)}`}\n                    className='w-[30px] h-[30px] p-1 flex justify-center items-center  rounded-lg bg-sky-500'\n                  >\n                    <BsTelegram className='w-full text-white' />\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='container pt-4'>\n        <div class='flex justify-between  md:justify-center mb-[20px]'>\n          <button\n            className={`block w-full md:w-[200px] uppercase shadow-xl border-2 border-alotrade md:ml-0 rounded-tr-none rounded-br-none rounded-l-xl border-r-0  ${\n              (content === \"descr\" && \"bg-alotrade text-white\") ||\n              \" bg-white text-[#00c2cb]\"\n            } font-bold focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-3 md:px-10 px-2 rounded`}\n            onClick={() => setContent(\"descr\")}\n          >\n            О компании\n          </button>\n          <button\n            className={`block w-full md:w-[200px] uppercase shadow-xl border-2 border-alotrade md:ml-0  ${\n              (content === \"products\" && \"bg-alotrade text-white\") ||\n              \" bg-white text-alotrade\"\n            } font-bold focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-3 md:px-10 px-2`}\n            onClick={() => setContent(\"products\")}\n          >\n            Товары\n          </button>\n          <button\n            className={`block w-full md:w-[200px] uppercase shadow-xl border-2 border-alotrade md:ml-0 rounded-tl-none rounded-bl-none rounded-r-xl border-l-0  ${\n              (content === \"ads\" && \"bg-alotrade text-white\") ||\n              \" bg-white text-alotrade\"\n            } font-bold focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-3 md:px-10 px-2 rounded`}\n            onClick={() => setContent(\"ads\")}\n          >\n            Рекламы\n          </button>\n        </div>\n        {content === \"descr\" ? (\n          <div className='py-6'>\n            <h2 className='font-bold text-[32px] px-5'>О комании</h2>\n            <p className='text-[16px] px-2'>{organization?.description}</p>\n          </div>\n        ) : content === \"products\" ? (\n          <div className='w-full bg-white'>\n            <div className='md:container'>\n              <div className='w-full block md:flex'>\n                <div className='w-full md:px-4 flex flex-col gap-[20px]'>\n                  <h2 className='font-bold text-[32px] px-5'>Товары</h2>\n                  {/* <PageHeader\n                    isOrganization={!!organization}\n                    totalDatas={totalDatas}\n                    countPage={countPage}\n                    currentPage={currentPage}\n                    setCurrentPage={setCurrentPage}\n                    // filter={filter}\n                    count={totalDatas}\n                    // onClick={() => openModal(\"createProduct\")}\n                    // handleFilter={handleFilter}\n                    filterData={product}\n                    setFilterBody={setFilterBody}\n                    setFilterVisible={setFilterVisible}\n                    mainTitle={\"Товары\"}\n                    countTitle=\"Jami:\"\n                  /> */}\n                  <div className='grid grid-cols-2 px-2 gap-2 md:grid-cols-4 md:gap-3'>\n                    {map(products, (product) => (\n                      <ProductCard\n                        logged={logged}\n                        key={uniqueId()}\n                        product={product}\n                        // editHandler={editHandler}\n                        // deleteHandler={deleteHandler}\n                      />\n                    ))}\n                  </div>\n                  {totalDatas > 0 && (\n                    <div className='flex justify-center py-2 mb-8'>\n                      <Pagination\n                        defaultPage={0}\n                        variant='outlined'\n                        color='primary'\n                        count={Math.ceil(totalDatas / countPage)}\n                        page={currentPage + 1}\n                        onChange={(event, value) => {\n                          setCurrentPage(value - 1);\n                        }}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <UniversalModal\n              isOpen={modalVisible}\n              body={modalBody}\n              closeModal={closeHandler}\n              toggleModal={toggleModal}\n              productId={productId}\n              modalBody={modalBody}\n              headerText=\"Mahsulotni o'chirish\"\n              title=\"Siz rostdan ham mahsulotni o'chirmoqchimisiz?\"\n            />\n          </div>\n        ) : (\n          <div className='flex flex-col py-5'>\n            <h2 className='font-bold text-[32px] px-5'>Рекламы</h2>\n            <div className='grid grid-cols-1 md:grid-cols-3 py-2 gap-3'>\n              {anns.map((el, index) => (\n                <AnnouncementCard isCarousel={true} key={index} ann={el} />\n              ))}\n            </div>\n            {totalAnnsDatas > 0 && (\n              <div className='flex justify-center py-2'>\n                <Pagination\n                  defaultPage={0}\n                  variant='outlined'\n                  color='primary'\n                  count={Math.ceil(totalAnnsDatas / countPage)}\n                  page={currentAnnsPage + 1}\n                  onChange={(event, value) => {\n                    setCurrentAnnsPage(value - 1);\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Organization;\n"],"names":["dispatch","useDispatch","t","useTranslation","savdo_turi","getTranslations","logged","userData","user","useSelector","state","login","products","anns","product","categories","subcategories","tradetypes","regions","districts","name","filter","productId","setProductId","useState","totalDatas","setTotalDatas","currentPage","setCurrentPage","totalAnnsDatas","setTotalAnnsDatas","currentAnnsPage","setCurrentAnnsPage","modalVisible","setModalVisible","modalBody","setModalBody","filterVisible","setFilterVisible","filterBody","setFilterBody","organization","setOrganization","content","setContent","location","Math","floor","random","useLocation","_id","useEffect","getOrganizationById","id","then","error","payload","data","page","count","dataAnn","post","getProducts","getProductsCount","totalCount","getAnns","getAnnsCount","className","src","image","noImage","alt","map","type","uniqueId","region","label","district","size","target","href","media","site","startsWith","phone","phone2","phone3","email","instagram","getInstagramLink","telegram","getTelegramLink","class","onClick","description","ProductCard","Pagination","defaultPage","variant","color","ceil","onChange","event","value","UniversalModal","isOpen","body","closeModal","toggleModal","headerText","title","el","index","AnnouncementCard","isCarousel","ann"],"sourceRoot":""}