{"version":3,"file":"static/js/743.8f56baf6.chunk.js","mappings":"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","sources":["Components/OfferChat/ChatUser.js","Components/OfferChat/ProductData.js","Components/OfferChat/ChatIncomingMessage.js","Components/OfferChat/ChatSendingMessage.js","Components/OfferChat/ChatInput.js","Config/socket.js","Components/OfferChat/HeaderMobileOffer.js","Pages/User/Offers/Offers.js"],"sourcesContent":["import React from \"react\";\nimport { IoArrowDownOutline, IoArrowUpOutline } from \"react-icons/io5\";\nimport { HiOutlineBellAlert } from \"react-icons/hi2\";\n\nconst ChatUser = ({ offer, user, changeOffer }) => {\n  const _id = user?._id;\n  const { order, product, messages, createdAt, offererUser } = offer;\n  const name = order ? order.name : product ? product.name : \"\";\n  const { message, isRead, user: chatUser } = messages;\n  const image = order ? order.images[0] : product ? product.images[0] : null;\n  const isUser = offererUser._id === _id;\n  const isNew = chatUser !== user?._id && !isRead;\n\n  return (\n    <div\n      onClick={changeOffer}\n      className=\"bg-white flex items-center hover:bg-grey-lighter cursor-pointer flex-row border-b pl-3\"\n    >\n      <div>\n        {image ? (\n          <img\n            alt={\"alotrade.uz\"}\n            className=\"h-12 w-12 rounded-full\"\n            src={image}\n          />\n        ) : (\n          <div className=\"h-12 w-12 rounded-full border-dashed bg-neutral-200 flex items-center justify-center\">\n            IMG\n          </div>\n        )}\n        <p className=\"text-xs text-neutral-600 mt-2\">\n          {new Date(createdAt).toLocaleDateString()}\n        </p>\n      </div>\n      <div className=\"ml-4 flex-1 py-4 pr-2\">\n        <div className=\"flex items-bottom justify-between\">\n          <p className=\"text-neutral-500 font-amazonbold h-6 overflow-hidden\">\n            {name}\n          </p>\n          {isNew && <HiOutlineBellAlert className=\"fill-green-500\" size={20} />}\n        </div>\n        <div className=\"flex justify-between items-center\">\n          <p className=\"text-neutral-500 mt-1 text-sm h-6 overflow-hidden\">\n            {message && message}\n          </p>\n          <p className=\"text-xs text-neutral-600\">\n            {isUser ? (\n              <IoArrowUpOutline size={15} className=\"rotate-45\" />\n            ) : (\n              <IoArrowDownOutline size={15} className=\"rotate-45\" />\n            )}\n          </p>\n        </div>\n      </div>\n      {/*<div className=\"flex h-[90px] bg-green-100 flex items-center text-primary-800\">*/}\n      {/*  <HiOutlineArrowNarrowUp size={27} />*/}\n      {/*</div>*/}\n    </div>\n  );\n};\n\nexport default ChatUser;\n","import React from \"react\";\nimport { IoCallOutline, IoLocationOutline } from \"react-icons/io5\";\nimport { map, uniqueId } from \"lodash\";\nimport TextTruncate from \"react-text-truncate\";\nimport { Link } from \"react-router-dom\";\n\nconst ProductData = ({ data, translations }) => {\n  if (!data) return null;\n  const organization = data?.organization;\n  const user = data?.user;\n  const whois = organization\n    ? translations.tashkilot + \": \" + organization?.name\n    : translations.foydalanuvchi +\n      \": \" +\n      user?.firstname +\n      \" \" +\n      user?.lastname;\n  return (\n    <>\n      <h2 className=\"font-amazonbold py-2 text-lg border-y border-neutral-300\">\n        {whois}\n      </h2>\n      <h3 className=\"font-amazonbold py-1 font-bold\">{data?.name}</h3>\n      <h4 className=\"py-2 mb-2 block max-w-[300px]\">\n        <TextTruncate element=\"p\" line={3} text={data?.description} />\n      </h4>\n      <p className=\"flex items-center text-neutral-600 text-sm\">\n        <span className=\"mr-2\">\n          <IoLocationOutline />\n        </span>\n        <span>\n          {data?.region?.name}, {data?.district?.name}\n        </span>\n      </p>\n      <p className=\"flex items-center text-neutral-600 text-sm\">\n        <span className=\"mr-2\">\n          <IoCallOutline />\n        </span>\n        <span>{data?.organization?.phone || data?.user?.phone}</span>\n      </p>\n      <Link\n        to={organization ? `/products/${data._id}` : `/orders/${data._id}`}\n        className=\"bg-orange-500 text-[12px] my-4 md:text-[16px] shadow-lg shadow- shadow-orange-600 text-white cursor-pointer px-3 py-1 text-center justify-center items-center rounded-xl flex space-x-2 flex-row\"\n      >\n        Подробнее\n      </Link>\n      <p className=\"flex items-center justify-between text-neutral-600 text-lg py-2 my-2 border-y border-neutral-300\">\n        <span className=\"pr-2 font-amazonbold\">{translations.narxi}: </span>{\" \"}\n        <span className=\"text-amber-500 font-bold font-amazonbold \">\n          {data?.minPrice\n            ? data?.minPrice?.toLocaleString(\"ru-RU\") + \" - \"\n            : \"\"}{\" \"}\n          {data?.maxPrice?.toLocaleString(\"ru-RU\")} {data?.currency}\n        </span>\n      </p>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {data?.images &&\n          map(data?.images, (image) => (\n            <div\n              key={uniqueId(\"productImage\")}\n              className=\"w-full flex items-center justify-center rounded bg-white-900 \"\n            >\n              <img className=\"\" alt=\"alotrade\" src={image} />\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default ProductData;\n","import React from \"react\";\n\nconst ChatIncomingMessage = ({ message: Message }) => {\n  const { message, user, createdAt } = Message;\n  return (\n    <div className=\"w-full flex flex-row gap-1 ml-1 my-3\">\n      <div className=\"rounded-full bg-white w-15 flex justify-center items-center\">\n        {user?.image ? (\n          <img\n            src={user.image}\n            alt=\"Alotarade\"\n            className=\"w-12 h-12 rounded-full\"\n          />\n        ) : (\n          <div className=\"w-12 h-12 rounded-full uppercase flex items-center justify-center bg-white-900\">\n            {user?.firstname[0]}\n            {user?.lastname[0]}\n          </div>\n        )}\n      </div>\n      <div className=\"w-2/3 bg-white rounded shadow-md px-2\">\n        <div className=\"flex justify-between\">\n          <h3 className=\"font-amazonbold text-neutral-500 text-[15px]\">\n            {user?.firstname} {user?.lastname}\n          </h3>\n          <p className=\"text-[12px] text-neutral-500 text-end\">\n            {new Date(createdAt).toLocaleTimeString().slice(0, 5)}{\" \"}\n            {new Date(createdAt).toLocaleDateString()}\n          </p>\n        </div>\n        <p className=\"text-neutral-600\">{message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatIncomingMessage;\n","import React from \"react\";\n\nconst ChatIncomingMessage = ({ message: Message }) => {\n  const { message, user, createdAt } = Message;\n  return (\n    <div className=\"w-full flex flex-row my-3 gap-1 justify-end\">\n      <div className=\"w-2/3 bg-white rounded shadow-md px-2\">\n        <div className=\"flex justify-between\">\n          <h3 className=\"font-amazonbold text-neutral-500 text-[15px]\">\n            {user?.firstname} {user?.lastname}\n          </h3>\n          <p className=\"text-[12px] text-neutral-500 text-end\">\n            {new Date(createdAt).toLocaleTimeString().slice(0, 5)}{\" \"}\n            {new Date(createdAt).toLocaleDateString()}\n          </p>\n        </div>\n        <p className=\"text-neutral-600\">{message}</p>\n      </div>\n      <div className=\"rounded-full bg-white mr-1 w-15 flex justify-center items-center\">\n        {user?.image ? (\n          <img\n            src={user.image}\n            alt=\"Alotarade\"\n            className=\"w-12 h-12 rounded-full\"\n          />\n        ) : (\n          <div className=\"w-12 h-12 rounded-full uppercase flex items-center justify-center bg-white-900\">\n            {user?.firstname[0]}\n            {user?.lastname[0]}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatIncomingMessage;\n","import React from \"react\";\nimport { IoSend } from \"react-icons/io5\";\nimport { getTranslations } from \"../../translation\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ChatInput = ({ changeHandler, enterHandler, sendHandler, value }) => {\n  const { t } = useTranslation();\n  const { xabarni_kiriting } = getTranslations(t);\n  return (\n    <div className=\"bg-white-900 w-full h-[5rem] px-10 py-5 flex\">\n      <input\n        value={value}\n        onKeyUp={enterHandler}\n        onChange={changeHandler}\n        placeholder={xabarni_kiriting}\n        className=\"border rounded-l w-full py-1 px-3 outline-0\"\n      />\n      <button\n        onClick={sendHandler}\n        className=\"px-3 border-r border-y text-neutral-500 rounded-r\"\n      >\n        <IoSend color=\"#fff\" />\n      </button>\n    </div>\n  );\n};\n\nexport default ChatInput;\n","import io from \"socket.io-client\";\nconst baseURL =\n  process.env.REACT_APP_API_SOCKET_ENDPOINT || \"http://185.154.13.191\";\n\nconst socket = io(\"https://test.alotrade.uz/api\");\nconst token = JSON.parse(localStorage.getItem(\"_grecaptcha\"));\nsocket.auth = { token };\n\nexport default socket;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst HeaderMobileOffer = ({ data }) => {\n  const organization = data?.organization;\n  return (\n    <Link\n      to={organization ? `/products/${data?._id}` : `/orders/${data?._id}`}\n      className=\"text-white text-[14px] font-medium bg-orange-500 px-2 flex items-center justify-center\"\n    >\n      Подробнее\n    </Link>\n  );\n};\n\nexport default HeaderMobileOffer;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ChatUser from \"../../../Components/OfferChat/ChatUser\";\nimport ProductData from \"../../../Components/OfferChat/ProductData\";\nimport ChatIncomingMessage from \"../../../Components/OfferChat/ChatIncomingMessage\";\nimport ChatSendingMessage from \"../../../Components/OfferChat/ChatSendingMessage\";\nimport ChatInput from \"../../../Components/OfferChat/ChatInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { getProductByOffer } from \"../Products/productSlice\";\nimport { getOrderByOffer } from \"../Orders/orderSlice\";\nimport { universalToast } from \"../../../Components/ToastMessages/ToastMessages\";\nimport {\n  createMessage,\n  createOffer,\n  getMessagesByOffer,\n  getOfferById,\n  getOfferByUser,\n  getOffers,\n  setAllMessages,\n} from \"./offerSlice\";\nimport { map, uniqueId } from \"lodash\";\nimport socket from \"../../../Config/socket\";\nimport { useTranslation } from \"react-i18next\";\nimport { getTranslations } from \"../../../translation\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport HeaderMobileOffer from \"../../../Components/OfferChat/HeaderMobileOffer\";\n\nconst Offers = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { t } = useTranslation([\"common\"]);\n  const translations = getTranslations(t);\n\n  const { width } = useWindowSize();\n\n  const messagesEndRef = useRef(null);\n  const {\n    userData: { user },\n  } = useSelector((state) => state.login);\n\n  const { offers, messages } = useSelector((state) => state.offers);\n\n  const [id, setId] = useState(null);\n  const [type, setType] = useState(null);\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [currentOrder, setCurrentOrder] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [offer, setOffer] = useState(null);\n  const [filter, setFilter] = useState(null);\n  const [offerVisible, setOfferVisible] = useState(false);\n\n  const changeFilter = (e) => {\n    const val = e.target.name;\n    val === filter ? setFilter(null) : setFilter(e.target.name);\n  };\n\n  const changeHandler = (e) => {\n    setMessage(e.target.value);\n  };\n\n  const enterHandler = (e) => {\n    if (e.key === \"Enter\") {\n      sendHandler();\n    }\n  };\n\n  const sendHandler = () => {\n    if (message.length === 0) {\n      return universalToast(\"Внимание! Сообщение не введено\", \"warning\");\n    }\n\n    if (!currentProduct && !currentOrder)\n      return universalToast(\n        translations.mahsulot_yoki_buyurtma_tanlanmagan,\n        \"warning\"\n      );\n\n    const data = {\n      message,\n      product: currentProduct ? currentProduct._id : undefined,\n      order: currentOrder ? currentOrder._id : undefined,\n      offer: offer ? offer._id : undefined,\n    };\n    dispatch(offer ? createMessage(data) : createOffer(data)).then(\n      ({ error, payload: { offer, message } }) => {\n        if (!error) {\n          setMessage(\"\");\n          setOffer(offer);\n          newMessageHasBeenSend({\n            recipient: message?.recipient,\n          });\n        }\n      }\n    );\n  };\n\n  const changeOffer = (offer) => {\n    if (offer.order) {\n      setType(\"order\");\n      setId(offer.order._id);\n    }\n    if (offer.product) {\n      offer.product && setType(\"product\");\n      offer.product && setId(offer.product._id);\n    }\n    setOffer(offer);\n    setOfferVisible(true);\n  };\n\n  const isUser = (offererUser) => {\n    return offererUser?._id === user?._id;\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const newMessageHasBeenSend = ({ recipient }) => {\n    socket.emit(\"sendMessage\", { recipient });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    socket.on(\"error\", ({ id, message }) => {\n      user._id === id && universalToast(message, \"error\");\n    });\n    socket.on(\"newMessage\", ({ recipient }) => {\n      const isUser = recipient === user._id;\n      isUser && dispatch(getOffers());\n      isUser &&\n        offer &&\n        dispatch(getMessagesByOffer({ id: offer._id })).then(({ error }) => {\n          if (!error) {\n            dispatch(getOfferById({ id: offer._id }));\n          }\n        });\n    });\n  }, [user, dispatch, offer]);\n\n  useEffect(() => {\n    if (location.state) {\n      const type = location.state.type;\n      const id = location.state.id;\n      setId(id);\n      setType(type);\n\n      const data = { [type]: id };\n      dispatch(getOfferByUser(data)).then(({ error, payload: { offer } }) => {\n        if (!error) {\n          setOffer(offer);\n          !offer && dispatch(setAllMessages({ messages: [] }));\n        }\n      });\n    } else {\n      dispatch(setAllMessages({ messages: [] }));\n      setCurrentOrder(null);\n      setCurrentProduct(null);\n    }\n  }, [location.state, dispatch]);\n\n  useEffect(() => {\n    if (id) {\n      if (type === \"product\") {\n        dispatch(getProductByOffer({ id })).then(\n          ({ error, payload: { product } }) => {\n            if (!error) {\n              setCurrentOrder(null);\n              setCurrentProduct(product);\n            }\n          }\n        );\n      }\n      if (type === \"order\") {\n        dispatch(getOrderByOffer({ id })).then(\n          ({ error, payload: { order } }) => {\n            if (!error) {\n              setCurrentProduct(null);\n              setCurrentOrder(order);\n            }\n          }\n        );\n      }\n    }\n    setOfferVisible(true);\n  }, [id, type, dispatch]);\n\n  useEffect(() => {\n    dispatch(getOffers({ filter }));\n  }, [dispatch, filter, user]);\n\n  useEffect(() => {\n    offer &&\n      dispatch(getMessagesByOffer({ id: offer._id })).then(({ error }) => {\n        if (!error) {\n          dispatch(getOfferById({ id: offer._id }));\n        }\n      });\n  }, [dispatch, offer]);\n  if (width < 720) {\n    return (\n      <div className='flex flex-row h-full w-full relative'>\n        <div className='w-full md:max-w-[400px] md:min-w-[300px] md:w-1/4 h-full flex border-r-2 flex-col'>\n          {/* <div>\n            <button\n              onClick={changeFilter}\n              name=\"offererUser\"\n              className={`w-1/2 py-2 ${\n                filter === \"offererUser\" ? \"bg-primary-700\" : \"bg-primary-800\"\n              } text-white-900 border-r border-white-900`}\n            >\n              {translations.chiquvchi_xabar}\n            </button>\n            <button\n              onClick={changeFilter}\n              name=\"user\"\n              className={`w-1/2 py-2 ${\n                filter === \"user\" ? \"bg-primary-700\" : \"bg-primary-800\"\n              } text-white-900`}\n            >\n              {translations.kiruvchi_xabar}\n            </button>\n          </div> */}\n          <div class='flex justify-between md:gap-4 md:justify-center mb-[20px]'>\n            <button\n              name='offererUser'\n              className={`block w-full md:w-auto uppercase shadow md:ml-0 rounded-tr-none rounded-br-none border-r-0 border-1 border-[#03c1f6cc] ${\n                (filter === \"offererUser\" && \"bg-alotrade text-white\") ||\n                \" bg-white text-[#00c2cb]\"\n              } font-bold focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-3 md:px-10 px-2`}\n              onClick={changeFilter}\n            >\n              Исходящие\n            </button>\n            <button\n              name='user'\n              className={`block w-full md:w-auto uppercase shadow md:ml-0 rounded-tl-none rounded-bl-none border-l-0 border-1 border-[#03c1f6cc] ${\n                (filter === \"user\" && \"bg-alotrade text-white\") ||\n                \" bg-white text-alotrade\"\n              } font-bold focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-3 md:px-10 px-2`}\n              onClick={changeFilter}\n            >\n              Входящие\n            </button>\n          </div>\n          <div className='h-full w-full px-3 overflow-y-scroll'>\n            {map(offers, (offer) => (\n              <ChatUser\n                changeOffer={() => changeOffer(offer)}\n                user={user}\n                key={uniqueId(\"chatUser\")}\n                offer={offer}\n              />\n            ))}\n          </div>\n        </div>\n        <div\n          className={`h-full ${\n            offerVisible ? \"fixed top-0 left-0 w-full h-full z-50\" : \"hidden\"\n          } md:w-1/2 md:relative bg-alotrade flex flex-col`}\n        >\n          <div className='bg-alotrade border-b border-white h-[50px] flex justify-between pl-2'>\n            <button\n              onClick={() => setOfferVisible(false)}\n              className='text-white text-[14px] font-medium'\n            >\n              Назад\n            </button>\n            <HeaderMobileOffer data={currentProduct || currentOrder} />\n          </div>\n          <div className='h-full overflow-y-scroll'>\n            {map(messages, (message) =>\n              isUser(message.user) ? (\n                <ChatSendingMessage\n                  key={uniqueId(\"message\")}\n                  message={message}\n                />\n              ) : (\n                <ChatIncomingMessage\n                  key={uniqueId(\"message\")}\n                  message={message}\n                />\n              )\n            )}\n            <div className='' ref={messagesEndRef} />\n          </div>\n          <ChatInput\n            value={message}\n            changeHandler={changeHandler}\n            enterHandler={enterHandler}\n            sendHandler={sendHandler}\n          />\n        </div>\n        {/* <div className=\"max-w-[400px] min-w-[300px] w-1/4 h-full p-4 border-l-2 bg-white\">\n          <ProductData\n            data={currentProduct || currentOrder}\n            translations={translations}\n          />\n        </div> */}\n      </div>\n    );\n  }\n  return (\n    <div className='flex flex-row h-screen w-full '>\n      <div className='max-w-[400px] min-w-[300px] w-1/4 h-full flex border-r-2 flex-col'>\n        <div>\n          <button\n            onClick={changeFilter}\n            name='offererUser'\n            className={`w-1/2 py-2 ${\n              filter === \"offererUser\" ? \"bg-primary-700\" : \"bg-primary-800\"\n            } text-white-900 border-r border-white-900`}\n          >\n            {translations.chiquvchi_xabar}\n          </button>\n          <button\n            onClick={changeFilter}\n            name='user'\n            className={`w-1/2 py-2 ${\n              filter === \"user\" ? \"bg-primary-700\" : \"bg-primary-800\"\n            } text-white-900`}\n          >\n            {translations.kiruvchi_xabar}\n          </button>\n        </div>\n        <div className='h-full w-full px-3'>\n          {map(offers, (offer) => (\n            <ChatUser\n              changeOffer={() => changeOffer(offer)}\n              user={user}\n              key={uniqueId(\"chatUser\")}\n              offer={offer}\n            />\n          ))}\n        </div>\n      </div>\n      <div className='h-full w-1/2 relative bg-alotrade flex flex-col'>\n        <div className='h-full'>\n          {map(messages, (message) =>\n            isUser(message.user) ? (\n              <ChatSendingMessage key={uniqueId(\"message\")} message={message} />\n            ) : (\n              <ChatIncomingMessage\n                key={uniqueId(\"message\")}\n                message={message}\n              />\n            )\n          )}\n          <div className='' ref={messagesEndRef} />\n        </div>\n        <ChatInput\n          value={message}\n          changeHandler={changeHandler}\n          enterHandler={enterHandler}\n          sendHandler={sendHandler}\n        />\n      </div>\n      <div className='max-w-[400px] min-w-[300px] w-1/4 h-full p-4 border-l-2 bg-white'>\n        <ProductData\n          data={currentProduct || currentOrder}\n          translations={translations}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Offers;\n"],"names":["offer","user","changeOffer","_id","order","product","messages","createdAt","offererUser","name","message","isRead","chatUser","image","images","isUser","isNew","onClick","className","alt","src","Date","toLocaleDateString","size","data","translations","organization","whois","tashkilot","foydalanuvchi","firstname","lastname","element","line","text","description","region","district","phone","to","narxi","minPrice","toLocaleString","maxPrice","currency","map","uniqueId","Message","toLocaleTimeString","slice","changeHandler","enterHandler","sendHandler","value","t","useTranslation","xabarni_kiriting","getTranslations","onKeyUp","onChange","placeholder","color","socket","io","token","JSON","parse","localStorage","getItem","auth","dispatch","useDispatch","location","useLocation","width","useWindowSize","messagesEndRef","useRef","userData","useSelector","state","login","offers","id","setId","useState","type","setType","currentProduct","setCurrentProduct","currentOrder","setCurrentOrder","setMessage","setOffer","filter","setFilter","offerVisible","setOfferVisible","changeFilter","e","val","target","key","length","universalToast","mahsulot_yoki_buyurtma_tanlanmagan","undefined","createMessage","createOffer","then","error","payload","newMessageHasBeenSend","recipient","useEffect","current","scrollIntoView","behavior","scrollToBottom","getOffers","getMessagesByOffer","getOfferById","getOfferByUser","setAllMessages","getProductByOffer","getOrderByOffer","class","ChatSendingMessage","ref","chiquvchi_xabar","kiruvchi_xabar"],"sourceRoot":""}