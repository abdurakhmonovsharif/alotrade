{"version":3,"file":"static/js/577.6087bef8.chunk.js","mappings":"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","sources":["Pages/User/Products/Products.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PageHeader from \"../../../Components/PageHeaders/PageHeader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filter } from \"./constants\";\nimport { filterProduct } from \"../../Filter/filterSlice\";\nimport {\n  deleteProduct,\n  getProductsCount,\n  getProducts,\n  clearProductData,\n} from \"./productSlice\";\nimport UniversalModal from \"../../../Components/Modal/UniversalModal\";\nimport { map, uniqueId } from \"lodash\";\nimport ProductCard from \"../../../Components/ProductCard/ProductCard\";\nimport Filter from \"../../Filter/Filter\";\n\nimport { useLocation } from \"react-router-dom\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport { Pagination } from \"@mui/material\";\nimport { Loading } from \"@nextui-org/react\";\n\nconst Products = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    logged,\n    userData: { user, organization },\n  } = useSelector((state) => state.login);\n\n  const { width } = useWindowSize();\n\n  const { products, loading } = useSelector((state) => state.products);\n  const {\n    product,\n    categories,\n    subcategories,\n    subcategories2,\n    tradetypes,\n    regions,\n    districts,\n    name,\n  } = useSelector((state) => state.filter);\n  const [productId, setProductId] = useState(null);\n  const [totalDatas, setTotalDatas] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [countPage, setCountPage] = useState(width < 720 ? 20 : 15);\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalBody, setModalBody] = useState(null);\n\n  const [filterVisible, setFilterVisible] = useState(false);\n  const [filterBody, setFilterBody] = useState(null);\n\n  const closeHandler = () => {\n    setModalVisible(false);\n  };\n\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  const openModal = (body) => {\n    setModalBody(body);\n    setModalVisible(true);\n    setProductId(null);\n  };\n\n  const deleteHandler = (id) => {\n    setProductId(id);\n    setModalBody(\"approve\");\n    setModalVisible(true);\n  };\n\n  const editHandler = (id) => {\n    setProductId(id);\n    setModalBody(\"createProduct\");\n    setModalVisible(true);\n  };\n\n  const handleFilter = (e) => {\n    const value = e.target.value;\n    dispatch(filterProduct(value));\n  };\n\n  const deleteProductById = () => {\n    productId &&\n      dispatch(deleteProduct({ id: productId })).then(({ error }) => {\n        if (!error) {\n          setModalVisible(false);\n          setProductId(null);\n        }\n      });\n  };\n\n  useEffect(() => {\n    window.history.replaceState({}, document.title);\n\n    const locData = location?.state?.category?._id;\n\n    const data = {\n      page: currentPage,\n      count: countPage,\n      product,\n      categories: categories,\n      subcategories,\n      subcategories2,\n      tradetypes,\n      regions,\n      districts,\n      user: user?._id,\n      name,\n    };\n\n    if (locData) {\n      data.categories = [...categories, locData];\n    }\n\n    dispatch(getProducts(data));\n    dispatch(getProductsCount(data)).then(\n      ({ payload: { totalCount }, error }) => {\n        if (!error) {\n          setTotalDatas(totalCount);\n        }\n      }\n    );\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    dispatch,\n    product,\n    currentPage,\n    countPage,\n    categories,\n    subcategories,\n    subcategories2,\n    tradetypes,\n    regions,\n    districts,\n    user,\n    name,\n    width,\n  ]);\n\n  useEffect(() => {\n    setCountPage(width < 720 ? 20 : 15);\n  }, [width]);\n\n  useEffect(() => {\n    dispatch(clearProductData());\n  }, [dispatch]);\n\n  return (\n    <div className='w-full bg-white pb-[100px]'>\n      <div className='md:container'>\n        <div className='w-full block md:flex'>\n          <Filter\n            filterBody={filterBody}\n            filterVisible={filterVisible}\n            setFilterVisible={setFilterVisible}\n          />\n          <div className='w-full md:px-4 flex flex-col gap-[20px]'>\n            <PageHeader\n              isOrganization={!!organization}\n              totalDatas={totalDatas}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              filter={filter}\n              count={totalDatas}\n              onClick={() => openModal(\"createProduct\")}\n              handleFilter={handleFilter}\n              filterData={product}\n              setFilterBody={setFilterBody}\n              setFilterVisible={setFilterVisible}\n              mainTitle={\"Товары\"}\n              countTitle='Jami:'\n              filterBtnClick={() => setFilterVisible(!filterVisible)}\n            />\n            {loading ? (\n              <Loading />\n            ) : (\n              <div className='grid grid-cols-2 px-2 gap-2 md:grid-cols-5 md:gap-3'>\n                {map(products, (product) => (\n                  <ProductCard\n                    logged={logged}\n                    key={uniqueId()}\n                    product={product}\n                    editHandler={editHandler}\n                    deleteHandler={deleteHandler}\n                  />\n                ))}\n              </div>\n            )}\n            {/* {width > 720 ? ( */}\n            {totalDatas > 0 && (\n              <div className='flex justify-center py-2'>\n                <Pagination\n                  defaultPage={1}\n                  variant='outlined'\n                  color='primary'\n                  count={Math.ceil(totalDatas / countPage)}\n                  page={currentPage + 1}\n                  onChange={(event, value) => {\n                    setCurrentPage(value - 1);\n                  }}\n                />\n              </div>\n            )}\n            {/* ) : (\n              <div className='w-full flex justify-center'>\n                <button\n                  onClick={() => setCountPage((prev) => prev + 20)}\n                  className='bg-alotrade shadow-xl text-white rounded py-2 px-4 text-[14px]'\n                >\n                  Показать еще\n                </button>\n              </div>\n            )} */}\n          </div>\n        </div>\n      </div>\n\n      <UniversalModal\n        isOpen={modalVisible}\n        body={modalBody}\n        closeModal={closeHandler}\n        toggleModal={toggleModal}\n        productId={productId}\n        modalBody={modalBody}\n        headerText=\"Mahsulotni o'chirish\"\n        title=\"Siz rostdan ham mahsulotni o'chirmoqchimisiz?\"\n        approveFunction={deleteProductById}\n      />\n    </div>\n  );\n};\n\nexport default Products;\n"],"names":["dispatch","useDispatch","location","useLocation","logged","userData","user","organization","useSelector","state","login","width","useWindowSize","products","loading","product","categories","subcategories","subcategories2","tradetypes","regions","districts","name","filter","productId","setProductId","useState","totalDatas","setTotalDatas","currentPage","setCurrentPage","countPage","setCountPage","modalVisible","setModalVisible","modalBody","setModalBody","filterVisible","setFilterVisible","filterBody","setFilterBody","deleteHandler","id","editHandler","useEffect","window","history","replaceState","document","title","locData","category","_id","data","page","count","getProducts","getProductsCount","then","payload","totalCount","error","clearProductData","className","isOrganization","onClick","handleFilter","e","value","target","filterProduct","filterData","mainTitle","countTitle","filterBtnClick","map","uniqueId","defaultPage","variant","color","Math","ceil","onChange","event","isOpen","body","closeModal","toggleModal","headerText","approveFunction","deleteProduct"],"sourceRoot":""}