{"version":3,"file":"static/js/572.93d59c1c.chunk.js","mappings":"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","sources":["Pages/CreateProduct/CreateProduct.js"],"sourcesContent":["import { filter, uniqueId } from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport SaveButton from \"../../Components/Buttons/SaveButton\";\r\nimport CheckboxList from \"../../Components/CheckboxList/CheckboxList\";\r\nimport UploadImages from \"../../Components/ImageCrop/UploadImages\";\r\nimport Description from \"../../Components/Inputs/Description\";\r\nimport Input from \"../../Components/Inputs/Input\";\r\nimport MinMaxPrice from \"../../Components/MinMaxPrice/MinMaxPrice\";\r\nimport UniversalModal from \"../../Components/Modal/UniversalModal\";\r\nimport RadioButtonList from \"../../Components/RadioButtons/RadioButtonList\";\r\nimport SelectCategory from \"../../Components/Select/SelectCategory\";\r\nimport SelectRegion from \"../../Components/Select/SelectRegion\";\r\nimport { universalToast } from \"../../Components/ToastMessages/ToastMessages\";\r\nimport { currencices } from \"../../Config/globalConstants\";\r\nimport {\r\n  clearSubcategories,\r\n  getAllCategories,\r\n  getSubcategories,\r\n} from \"../Category/categorySlice\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport {\r\n  clearFilters,\r\n  filterCategories,\r\n  filterSubcategories,\r\n  filterSubcategories2,\r\n} from \"../Filter/filterSlice\";\r\nimport { getAllregions } from \"../Filter/regionsSlice\";\r\nimport { checkRegisterProduct } from \"../User/Products/constants\";\r\nimport {\r\n  createProduct,\r\n  getProductById,\r\n  updateProduct,\r\n} from \"../User/Products/productSlice\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\r\n\r\nconst CreateProduct = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const productId = location?.state?.productId;\r\n\r\n  const { tradetypes } = useSelector((state) => state.trade);\r\n  const { loading } = useSelector((state) => state.login);\r\n  const { regions } = useSelector((state) => state.regions);\r\n  const { categoriesWithSubcategories } = useSelector(\r\n    (state) => state.categories\r\n  );\r\n  const {\r\n    categories: categoriesList,\r\n    subcategories: subcategoriesList,\r\n    subcategories2: subcategoriesList2,\r\n  } = useSelector((state) => state.filter);\r\n\r\n  const [isVisibleFilter, setIsVisibleFilter] = useState(false);\r\n\r\n  const [tradeTypes, setTradeTypes] = useState([]);\r\n  const [region, setRegion] = useState(\"\");\r\n  const [district, setDistrict] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [statuses, setStatuses] = useState([]);\r\n  const [currency, setCurrency] = useState(\"UZS\");\r\n  const [districts, setDistricts] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [minPrice, setMinPrice] = useState(\"\");\r\n  const [maxPrice, setMaxPrice] = useState(\"\");\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  const clearErrors = () => {\r\n    setErrors(null);\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    name === \"name\" && setName(value);\r\n    name === \"description\" && setDescription(value);\r\n    name === \"minPrice\" && setMinPrice(value);\r\n    name === \"maxPrice\" && setMaxPrice(value);\r\n    clearErrors();\r\n  };\r\n\r\n  const selectRegion = (e) => {\r\n    clearErrors();\r\n    setRegion(e);\r\n    setDistricts(e.districts);\r\n  };\r\n\r\n  const selectDistrict = (e) => {\r\n    clearErrors();\r\n    setDistrict(e);\r\n  };\r\n\r\n  const changeTradeTypes = (e) => {\r\n    clearErrors();\r\n    const value = e.target.value;\r\n    const checked = e.target.checked;\r\n    const filtered = filter(tradeTypes, (tradeType) => tradeType !== value);\r\n    checked\r\n      ? setTradeTypes([...filtered, value])\r\n      : setTradeTypes([...filtered]);\r\n  };\r\n\r\n  const selectCategory = (e) => {\r\n    const value = e.value;\r\n    clearErrors();\r\n    setCategories(e);\r\n\r\n    dispatch(filterSubcategories([]));\r\n    dispatch(filterSubcategories2([]));\r\n    dispatch(filterCategories([value]));\r\n    dispatch(getSubcategories({ category: value }));\r\n  };\r\n\r\n  const changeCurrency = (e) => {\r\n    setCurrency(e.target.value);\r\n    clearErrors();\r\n  };\r\n\r\n  const enterHandler = (e) => {\r\n    clearErrors();\r\n    e.key === \"Enter\" && submitHandler();\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    clearErrors();\r\n    const data = {\r\n      name,\r\n      description: description,\r\n      tradetypes: tradeTypes,\r\n      region: region.value,\r\n      district: district.value,\r\n      categories: categoriesList,\r\n      subcategories: subcategoriesList,\r\n      subcategories2: subcategoriesList2,\r\n      status: statuses,\r\n      currency,\r\n      images,\r\n      minPrice: Number(minPrice),\r\n      maxPrice: Number(maxPrice),\r\n    };\r\n    const check = checkRegisterProduct({ ...data, setErrors });\r\n    check &&\r\n      dispatch(\r\n        productId\r\n          ? updateProduct({ id: productId, ...data })\r\n          : createProduct({ ...data })\r\n      ).then(({ error }) => {\r\n        if (!error) {\r\n          productId\r\n            ? universalToast(\"Товар успешно изменен!\", \"success\")\r\n            : universalToast(\"Товар успешно создан!\", \"success\");\r\n          navigate(\"/profile/products\");\r\n          dispatch(clearFilters());\r\n        }\r\n      });\r\n  };\r\n\r\n  const setDatas = (product) => {\r\n    const {\r\n      tradetypes,\r\n      region,\r\n      district,\r\n      categories,\r\n      subcategories,\r\n      subcategories2,\r\n      status,\r\n      currency,\r\n      images,\r\n      minPrice,\r\n      maxPrice,\r\n      name,\r\n      description,\r\n    } = product;\r\n    const { districts } = region;\r\n    name && setName(name);\r\n    description && setDescription(description);\r\n    tradetypes && setTradeTypes(tradetypes);\r\n    region.label && setRegion(region);\r\n    district.label && setDistrict(district);\r\n    districts.length && setDistricts(districts);\r\n    categories && setCategories(categories[0] ? categories[0] : { value: \"\" });\r\n    status && setStatuses(status);\r\n    currency && setCurrency(currency);\r\n    images && setImages(images);\r\n    minPrice && setMinPrice(minPrice);\r\n    maxPrice && setMaxPrice(maxPrice);\r\n    if (categories.length > 0) {\r\n      categories && dispatch(filterCategories([categories[0].value]));\r\n      subcategories.length > 0 &&\r\n        dispatch(filterSubcategories([...subcategories.map((el) => el.value)]));\r\n      subcategories2.length > 0 &&\r\n        dispatch(\r\n          filterSubcategories2([...subcategories2.map((el) => el.value)])\r\n        );\r\n      dispatch(getSubcategories({ category: categories[0].value }));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    productId &&\r\n      dispatch(getProductById({ id: productId })).then(({ payload, error }) => {\r\n        if (error) {\r\n          UniversalModal(error.message, \"error\");\r\n        } else {\r\n          const { product } = payload;\r\n          setDatas(product);\r\n        }\r\n      });\r\n    return () => {\r\n      dispatch(filterSubcategories([]));\r\n      dispatch(filterSubcategories2([]));\r\n      dispatch(filterCategories([]));\r\n      dispatch(clearSubcategories());\r\n    };\r\n  }, [dispatch, productId]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategories());\r\n    dispatch(getAllregions());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className='py-6'>\r\n        {isVisibleFilter && (\r\n          <div\r\n            className='fixed top-0 left-0 w-full h-full z-[100] bg-black bg-opacity-50 '\r\n            onClick={() => setIsVisibleFilter(false)}\r\n          >\r\n            <Filter\r\n              onClick={() => setIsVisibleFilter(false)}\r\n              setFilterVisible={() => setIsVisibleFilter(false)}\r\n              filterVisible={isVisibleFilter}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className='container max-w-[800px]'>\r\n          <div className='text-[28px] text-alotrade font-bold mb-3 text-center'>\r\n            Карточка товара\r\n          </div>\r\n          {/* <CheckboxList\r\n            list={tradetypes}\r\n            checkedList={tradeTypes}\r\n            cols={2}\r\n            headerText=\"Тип торговли*\"\r\n            headerStyle=\"text-sm\"\r\n            listStyle=\"ml-0\"\r\n            onChange={changeTradeTypes}\r\n          /> */}\r\n          <SelectRegion\r\n            region={region}\r\n            selectRegion={selectRegion}\r\n            selectDistrict={selectDistrict}\r\n            district={district}\r\n            districts={districts}\r\n            regions={regions}\r\n            loading={loading}\r\n            labelRegion={\"Страна\"}\r\n            labelDistrict={\"Область\"}\r\n          />\r\n          <div className='grid grid-cols-1 md:grid-cols-2 w-full items-end gap-4 justify-center'>\r\n            <SelectCategory\r\n              // isMulti={true}\r\n              notShowSub={true}\r\n              categories={categories}\r\n              selectCategory={selectCategory}\r\n              categoriesWithSubcategories={categoriesWithSubcategories}\r\n              loading={loading}\r\n              labelCategory={\"Категория*\"}\r\n              openSubcategories={() => setIsVisibleFilter(!isVisibleFilter)}\r\n              kategoriya='Выбрать...'\r\n            />\r\n            <FormControl\r\n              size='small'\r\n              sx={{\r\n                \"@media (max-width: 600px)\": {\r\n                  width: \"130px\",\r\n                },\r\n                // marginTop: \"-20px\",\r\n              }}\r\n            >\r\n              <InputLabel\r\n                shrink={false}\r\n                InputLabelProps={{ shrink: false }}\r\n                id='trade-type-label'\r\n                sx={{ fontSize: \"14px\" }}\r\n              >\r\n                {tradeTypes.length == 0 && \"Тип торговля\"}\r\n              </InputLabel>\r\n              <Select\r\n                multiple\r\n                InputLabelProps={{ shrink: false }}\r\n                autoWidth={false}\r\n                sx={{\r\n                  boxShadow: \"none\",\r\n                  \".MuiOutlinedInput-notchedOutline\": { border: 0 },\r\n                  \"&.MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline\":\r\n                    {\r\n                      border: 0,\r\n                    },\r\n                  \"&.MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\r\n                    {\r\n                      border: 0,\r\n                    },\r\n                  border: 0,\r\n                  borderRadius: \"10px\",\r\n                  padding: 0,\r\n                  backgroundColor: \"#00C2CB4d\",\r\n                  textAlign: \"center\",\r\n                  fontSize: \"14px\",\r\n                  fontWeight: \"700\",\r\n                  color: \"#000\",\r\n                  width: \"100%\",\r\n                  overflow: \"hidden\",\r\n                }}\r\n                labelId='trade-type-label'\r\n                id='trade-type'\r\n                value={tradeTypes}\r\n                onChange={(e) => setTradeTypes(e.target.value)}\r\n              >\r\n                {/* <MenuItem value=''>\r\n                <em>{\"Выбрать тип торговли\"}</em>\r\n              </MenuItem> */}\r\n                {tradetypes &&\r\n                  tradetypes.map((el, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={el._id}>\r\n                        {el.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Input\r\n            label='Название*'\r\n            labelStyle='font-normal'\r\n            placeholder='Название товара или услуги'\r\n            name='name'\r\n            onChange={changeHandler}\r\n            value={name}\r\n          />\r\n          <Description\r\n            name='description'\r\n            value={description}\r\n            onChange={changeHandler}\r\n            label='Описание*'\r\n            labelStyle='font-normal'\r\n            placeholder='Введите информацию'\r\n          />\r\n          <div className='grid grid-cols-2'>\r\n            {/*<CheckboxList*/}\r\n            {/*  onChange={changeStatus}*/}\r\n            {/*  list={positions}*/}\r\n            {/*  headerText=\"Holati*\"*/}\r\n            {/*  headerStyle=\"text-sm text-[#777]\"*/}\r\n            {/*  checkedList={statuses}*/}\r\n            {/*/>*/}\r\n            <RadioButtonList\r\n              currency={currency}\r\n              onChange={changeCurrency}\r\n              list={currencices}\r\n              label='Способ оплаты'\r\n              name={uniqueId(\"valyuta\")}\r\n            />\r\n            <MinMaxPrice\r\n              onChange={changeHandler}\r\n              minPrice={minPrice}\r\n              maxPrice={maxPrice}\r\n            />\r\n          </div>\r\n          <UploadImages images={images} setImages={setImages} />\r\n          <div className='text-sm text-red-600 font-amazonbold text-center'>\r\n            {errors && errors}\r\n          </div>\r\n          <div className='flex justify-center'>\r\n            <SaveButton\r\n              title={productId ? \"Изменить\" : \"Создать\"}\r\n              className='w-[200px] mt-3'\r\n              onClick={submitHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateProduct;\r\n"],"names":["dispatch","useDispatch","location","useLocation","navigate","useNavigate","productId","state","tradetypes","useSelector","trade","loading","login","regions","categoriesWithSubcategories","categories","filter","categoriesList","subcategoriesList","subcategories","subcategoriesList2","subcategories2","useState","isVisibleFilter","setIsVisibleFilter","tradeTypes","setTradeTypes","region","setRegion","district","setDistrict","setCategories","name","setName","description","setDescription","statuses","setStatuses","currency","setCurrency","districts","setDistricts","images","setImages","minPrice","setMinPrice","maxPrice","setMaxPrice","errors","setErrors","clearErrors","changeHandler","e","target","value","submitHandler","data","status","Number","checkRegisterProduct","updateProduct","id","createProduct","then","error","universalToast","clearFilters","useEffect","getProductById","payload","UniversalModal","message","product","label","length","filterCategories","filterSubcategories","map","el","filterSubcategories2","getSubcategories","category","setDatas","clearSubcategories","getAllCategories","getAllregions","className","onClick","setFilterVisible","filterVisible","selectRegion","selectDistrict","labelRegion","labelDistrict","notShowSub","selectCategory","labelCategory","openSubcategories","kategoriya","size","sx","width","shrink","InputLabelProps","fontSize","multiple","autoWidth","boxShadow","border","borderRadius","padding","backgroundColor","textAlign","fontWeight","color","overflow","labelId","onChange","index","_id","labelStyle","placeholder","list","currencices","uniqueId","title"],"sourceRoot":""}