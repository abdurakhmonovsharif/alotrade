{"version":3,"file":"static/js/577.f10c62ae.chunk.js","mappings":"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","sources":["Pages/User/Products/Products.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PageHeader from \"../../../Components/PageHeaders/PageHeader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filter } from \"./constants\";\r\nimport { filterProduct } from \"../../Filter/filterSlice\";\r\nimport {\r\n  deleteProduct,\r\n  getProductsCount,\r\n  getProducts,\r\n  clearProductData,\r\n} from \"./productSlice\";\r\nimport UniversalModal from \"../../../Components/Modal/UniversalModal\";\r\nimport { map, uniqueId } from \"lodash\";\r\nimport ProductCard from \"../../../Components/ProductCard/ProductCard\";\r\nimport Filter from \"../../Filter/Filter\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useWindowSize from \"../../../hooks/useWindowSize\";\r\nimport { Pagination } from \"@mui/material\";\r\nimport { Loading } from \"@nextui-org/react\";\r\n\r\nconst Products = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const {\r\n    logged,\r\n    userData: { user, organization },\r\n  } = useSelector((state) => state.login);\r\n\r\n  const { width } = useWindowSize();\r\n\r\n  const { products, loading } = useSelector((state) => state.products);\r\n  const {\r\n    product,\r\n    categories,\r\n    subcategories,\r\n    subcategories2,\r\n    tradetypes,\r\n    regions,\r\n    districts,\r\n    name,\r\n  } = useSelector((state) => state.filter);\r\n  const [productId, setProductId] = useState(null);\r\n  const [totalDatas, setTotalDatas] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [countPage, setCountPage] = useState(width < 720 ? 20 : 15);\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalBody, setModalBody] = useState(null);\r\n\r\n  const [filterVisible, setFilterVisible] = useState(false);\r\n  const [filterBody, setFilterBody] = useState(null);\r\n\r\n  const closeHandler = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModalVisible(!modalVisible);\r\n  };\r\n\r\n  const openModal = (body) => {\r\n    setModalBody(body);\r\n    setModalVisible(true);\r\n    setProductId(null);\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    setProductId(id);\r\n    setModalBody(\"approve\");\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const editHandler = (id) => {\r\n    setProductId(id);\r\n    setModalBody(\"createProduct\");\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    const value = e.target.value;\r\n    dispatch(filterProduct(value));\r\n  };\r\n\r\n  const deleteProductById = () => {\r\n    productId &&\r\n      dispatch(deleteProduct({ id: productId })).then(({ error }) => {\r\n        if (!error) {\r\n          setModalVisible(false);\r\n          setProductId(null);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.history.replaceState({}, document.title);\r\n\r\n    const locData = location?.state?.category?._id;\r\n\r\n    const data = {\r\n      page: currentPage,\r\n      count: countPage,\r\n      product,\r\n      categories: categories,\r\n      subcategories,\r\n      subcategories2,\r\n      tradetypes,\r\n      regions,\r\n      districts,\r\n      user: user?._id,\r\n      name,\r\n    };\r\n\r\n    if (locData) {\r\n      data.categories = [...categories, locData];\r\n    }\r\n\r\n    dispatch(getProducts(data));\r\n    dispatch(getProductsCount(data)).then(\r\n      ({ payload: { totalCount }, error }) => {\r\n        if (!error) {\r\n          setTotalDatas(totalCount);\r\n        }\r\n      }\r\n    );\r\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    dispatch,\r\n    product,\r\n    currentPage,\r\n    countPage,\r\n    categories,\r\n    subcategories,\r\n    subcategories2,\r\n    tradetypes,\r\n    regions,\r\n    districts,\r\n    user,\r\n    name,\r\n    width,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setCountPage(width < 720 ? 20 : 15);\r\n  }, [width]);\r\n\r\n  useEffect(() => {\r\n    dispatch(clearProductData());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className='w-full bg-white pb-[100px]'>\r\n      <div className='md:container'>\r\n        <div className='w-full block md:flex'>\r\n          <Filter\r\n            filterBody={filterBody}\r\n            filterVisible={filterVisible}\r\n            setFilterVisible={setFilterVisible}\r\n          />\r\n          <div className='w-full md:px-4 flex flex-col gap-[20px]'>\r\n            <PageHeader\r\n              isOrganization={!!organization}\r\n              totalDatas={totalDatas}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              filter={filter}\r\n              count={totalDatas}\r\n              onClick={() => openModal(\"createProduct\")}\r\n              handleFilter={handleFilter}\r\n              filterData={product}\r\n              setFilterBody={setFilterBody}\r\n              setFilterVisible={setFilterVisible}\r\n              mainTitle={\"Товары\"}\r\n              countTitle='Jami:'\r\n              filterBtnClick={() => setFilterVisible(!filterVisible)}\r\n            />\r\n            {loading ? (\r\n              <Loading />\r\n            ) : (\r\n              <div className='grid grid-cols-2 px-2 gap-2 md:grid-cols-5 md:gap-3'>\r\n                {map(products, (product) => (\r\n                  <ProductCard\r\n                    logged={logged}\r\n                    key={uniqueId()}\r\n                    product={product}\r\n                    editHandler={editHandler}\r\n                    deleteHandler={deleteHandler}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n            {/* {width > 720 ? ( */}\r\n            {totalDatas > 0 && (\r\n              <div className='flex justify-center py-2'>\r\n                <Pagination\r\n                  defaultPage={1}\r\n                  variant='outlined'\r\n                  color='primary'\r\n                  count={Math.ceil(totalDatas / countPage)}\r\n                  page={currentPage + 1}\r\n                  onChange={(event, value) => {\r\n                    setCurrentPage(value - 1);\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            {/* ) : (\r\n              <div className='w-full flex justify-center'>\r\n                <button\r\n                  onClick={() => setCountPage((prev) => prev + 20)}\r\n                  className='bg-alotrade shadow-xl text-white rounded py-2 px-4 text-[14px]'\r\n                >\r\n                  Показать еще\r\n                </button>\r\n              </div>\r\n            )} */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <UniversalModal\r\n        isOpen={modalVisible}\r\n        body={modalBody}\r\n        closeModal={closeHandler}\r\n        toggleModal={toggleModal}\r\n        productId={productId}\r\n        modalBody={modalBody}\r\n        headerText=\"Mahsulotni o'chirish\"\r\n        title=\"Siz rostdan ham mahsulotni o'chirmoqchimisiz?\"\r\n        approveFunction={deleteProductById}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["dispatch","useDispatch","location","useLocation","useSelector","state","login","logged","userData","user","organization","width","useWindowSize","products","loading","filter","product","categories","subcategories","subcategories2","tradetypes","regions","districts","name","useState","productId","setProductId","totalDatas","setTotalDatas","currentPage","setCurrentPage","countPage","setCountPage","modalVisible","setModalVisible","modalBody","setModalBody","filterVisible","setFilterVisible","filterBody","setFilterBody","deleteHandler","id","editHandler","useEffect","window","history","replaceState","document","title","locData","category","_id","data","page","count","getProducts","getProductsCount","then","totalCount","payload","error","clearProductData","className","isOrganization","onClick","handleFilter","e","value","target","filterProduct","filterData","mainTitle","countTitle","filterBtnClick","map","uniqueId","defaultPage","variant","color","Math","ceil","onChange","event","isOpen","body","closeModal","toggleModal","headerText","approveFunction","deleteProduct"],"sourceRoot":""}