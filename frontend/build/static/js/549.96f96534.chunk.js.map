{"version":3,"file":"static/js/549.96f96534.chunk.js","mappings":"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","sources":["Pages/User/Categories/SubCategories1.js","Pages/User/Categories/Categories.js","Pages/User/Countyries/Countries.js","Pages/User/Organizations/Organizations.js"],"sourcesContent":["import React from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\n\nconst SubCategories1 = () => {\n    const {categoriesWithSubcategories: categories} = useSelector((state) => state.categories);\n    const {id, subID} = useParams();\n    const category = categories?.find(category => category._id === id);\n    const subCategories = category ? category.subcategories : [];\n    const nestedSubCategories = subCategories?.map((category) => {\n        return category?.subcategories?.map((sub) => {\n            if (sub.subcategory === subID) {\n                return sub\n            }\n        })[0]\n    })\n    return (subID ? nestedSubCategories : subCategories)?.map((subcategory) => (\n        <Link\n            key={subcategory._id}\n            className=\"flex basis-[420px] items-center gap-[20px] rounded-[16px] bg-[#F8F8F8] p-[10px] hover:bg-gray-200 xs:basis-full xs:gap-[12px]\"\n            to={subID?`/organizations_sub/${id}/${subID}`:`/organizations_sub/${id}/${subcategory._id}`}\n        >\n            <img\n                className=\"h-[107px] w-[107px] rounded-[12px] bg-white p-2\"\n                src={subcategory?.image}\n                alt=\"image\"\n            />\n            <div className=\"flex flex-col justify-center\">\n                <h3 className=\"font-['Inter'] text-[18px] font-semibold text-[#1C1C1C] xs:text-[14px]\">\n                    {subcategory.name}\n                </h3>\n                <p className=\"font-['Inter'] text-base font-normal text-[#747474]\">\n                    {subcategory.tgMembers}\n                </p>\n            </div>\n        </Link>\n    ));\n};\n\nexport default SubCategories1;\n","import React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAllCategories} from \"../../Category/categorySlice\";\nimport SubCategories1 from \"./SubCategories1\";\n\nconst CategoryCard = ({category, handleClickCategory}) => <Link\n    key={category._id}\n    onClick={() => handleClickCategory(category, true)}\n    className=\"flex basis-[420px] items-center gap-[20px] rounded-[16px] bg-[#F8F8F8] p-[10px] hover:bg-gray-200 xs:basis-full xs:gap-[12px]\"\n    to={`/organizations_sub/${category._id}`}\n>\n    <img\n        className=\"h-[107px] w-[107px] rounded-[12px] bg-white p-2\"\n        src={category?.image}\n        alt=\"image\"\n    />\n    <div className=\"flex flex-col justify-center\">\n        <h3 className=\"font-['Inter'] text-[18px] font-semibold text-[#1C1C1C] xs:text-[14px]\">\n            {category?.name}\n        </h3>\n        <p className=\"font-['Inter'] text-base font-normal text-[#747474]\">\n            {category.tgMembers}\n        </p>\n    </div>\n</Link>\nconst Categories = () => {\n    const dispatch = useDispatch();\n    const {categoriesWithSubcategories: categories} =\n        useSelector((state) => state.categories);\n    const {id} = useParams()\n    const [selectedCategory, setSelectedCategory] = useState([])\n    const handleClickCategory = (category, isSubCategory) => {\n        if (isSubCategory) {\n\n        } else {\n            setSelectedCategory(category)\n        }\n    }\n    return id ?\n        <SubCategories1/> :\n        categories?.map((category, index) => (\n            <CategoryCard category={category} handleClickCategory={handleClickCategory}/>\n        ))\n};\n\nexport default Categories;\n","const Countries=()=>{\n    return <div>Countries</div>\n}\nexport  default Countries","import React, {useEffect, useState} from \"react\";\nimport CardLogo from \"../../../Components/OrganizationCard/CardLogo\";\nimport CardInfo from \"../../../Components/OrganizationCard/CardInfo\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getOrganizations, getOrganizationsCount} from \"./organizationSlice\";\nimport {map, uniqueId} from \"lodash\";\nimport Pagination from \"../../../Components/Pagination/Pagination\";\nimport {useTranslation} from \"react-i18next\";\nimport {getTranslations} from \"../../../translation\";\nimport Filter from \"../../Filter/Filter\";\nimport PageHeader from \"../../../Components/PageHeaders/PageHeader\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport {Loading} from \"@nextui-org/react\";\nimport Categories from \"../Categories/Categories\";\nimport Countries from \"../Countyries/Countries\";\n\nconst Organizations = () => {\n    const dispatch = useDispatch();\n    const {t} = useTranslation([\"common\"]);\n    const translations = getTranslations(t);\n    const navigate = useNavigate();\n    const {\n        logged,\n        userData: {organization},\n    } = useSelector((state) => state.login);\n    const {organizations, loading} = useSelector(\n        (state) => state.organizations\n    );\n    const isOrganization = !!organization?._id;\n    const {\n        order,\n        categories,\n        subcategories,\n        tradetypes,\n        regions,\n        districts,\n        name,\n    } = useSelector((state) => state.filter);\n\n    const [currentPage, setCurrentPage] = useState(0);\n    const [totalDatas, setTotalDatas] = useState(0);\n    const countPage = 10;\n\n    const [modalBody, setModalBody] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const [filterVisible, setFilterVisible] = useState(false);\n    const [filterBody, setFilterBody] = useState('category');\n\n    const openModal = (body) => {\n        setModalBody(body);\n        setModalVisible(true);\n    };\n\n    useEffect(() => {\n        const data = {\n            page: 0,\n            count: countPage,\n            categories,\n            subcategories,\n            tradetypes,\n            regions,\n            districts,\n            name: \"\",\n        };\n        setCurrentPage(0);\n        dispatch(getOrganizations(data));\n        dispatch(getOrganizationsCount(data)).then(\n            ({payload: {totalCount}, error}) => {\n                if (!error) {\n                    setTotalDatas(totalCount);\n                }\n            }\n        );\n    }, [\n        dispatch,\n        order,\n        categories,\n        subcategories,\n        tradetypes,\n        regions,\n        districts,\n        name,\n    ]);\n\n    useEffect(() => {\n        const data = {\n            page: currentPage,\n            count: countPage,\n            categories,\n            subcategories,\n            tradetypes,\n            regions,\n            districts,\n            name: \"\",\n        };\n        dispatch(getOrganizations(data));\n        dispatch(getOrganizationsCount(data)).then(\n            ({payload: {totalCount}, error}) => {\n                if (!error) {\n                    setTotalDatas(totalCount);\n                }\n            }\n        );\n        //    eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch, order, currentPage, countPage]);\n\n    return (\n        <div className='w-full bg-white pb-[100px]'>\n            <div className='md:container'>\n                <div className='w-full block md:flex'>\n                    <Filter\n                        filterBody={filterBody}\n                        filterVisible={filterVisible}\n                        setFilterVisible={setFilterVisible}\n                    />\n                    <div className='w-full md:px-4 flex flex-col gap-[20px]'>\n                        <PageHeader\n                            isOrganization={isOrganization}\n                            totalDatas={totalDatas}\n                            countPage={countPage}\n                            currentPage={currentPage}\n                            setCurrentPage={setCurrentPage}\n                            // filter={filter}\n                            count={totalDatas}\n                            onClick={() => navigate(\"/sign-up/business\")}\n                            // handleFilter={handleFilter}\n                            // filterData={product}\n                            setFilterBody={setFilterBody}\n                            setFilterVisible={setFilterVisible}\n                            countTitle='Jami:'\n                            mainTitle={\"Компании\"}\n                            filterBtnClick={() => setFilterVisible(!filterVisible)}\n                        />\n\n                        {loading ? (\n                                <Loading/>\n                            ) :\n                            //  (\n                            //   <div className='grid grid-cols-1 px-2 gap-4 md:grid-cols-3 md:gap-3 pt-4'>\n                            //     {map(\n                            //       organizations,\n                            //       ({\n                            //         _id,\n                            //         image,\n                            //         name,\n                            //         tradetypes,\n                            //         categories,\n                            //         subcategories,\n                            //         region,\n                            //         district,\n                            //         phone,\n                            //         email,\n                            //       }) => (\n                            //         <div\n                            //           key={uniqueId(\"organization\")}\n                            //           className='bg-white-900 overflow-hidden rounded shadow-lg border-t-8 border-[#01c2cc] flex flex-col justify-between'\n                            //         >\n                            //           <div className='border-neutral-400 mt-2 mx-4 flex gap-1'>\n                            //             <h3 className='text-[12px] font-semibold font-amazonbold'>\n                            //               {\" \"}\n                            //               {translations.savdo_turi}:\n                            //             </h3>\n                            //             <h4 className='text-[12px]'>\n                            //               {`${map(\n                            //                 tradetypes,\n                            //                 (tradetype) => tradetype.name\n                            //               ).join(\", \")}`}\n                            //             </h4>\n                            //           </div>\n                            //           <CardLogo\n                            //             logo={image}\n                            //             name={name}\n                            //             region={region}\n                            //             district={district}\n                            //           />\n                            //           <CardInfo\n                            //             translations={translations}\n                            //             _id={_id}\n                            //             isOrganization={!!organization}\n                            //             logged={logged}\n                            //             tradetypes={tradetypes}\n                            //             categories={categories}\n                            //             subcategories={subcategories}\n                            //             district={district}\n                            //             phone={phone}\n                            //             email={email}\n                            //             name={name}\n                            //             region={region}\n                            //           />\n                            //         </div>\n                            //       )\n                            //     )}\n                            //   </div>\n                            // )\n\n                            <div className=\"lg:grid-cols-3 md:grid-cols-2 grid-cols-1 grid gap-2\">\n                                {filterBody === \"category\" ?\n                                    <Categories/>\n                                    : <Countries/>\n                                }\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n        // <div className=\"h-full w-full  bg-neutral-100 flex flex-col justify-between\">\n        //   <div className=\"bg-white-900 py-3 shadow-md flex justify-between items-center px-4\">\n        //     <h3 className=\"font-amazonbold\">\n        //       {translations.tashkilotlar}:{\" \"}\n        //       <span className=\"text-primary-900\">{totalDatas} </span>\n        //     </h3>\n        //     {totalDatas > 0 && (\n        //       <Pagination\n        //         currentPage={currentPage}\n        //         countPage={countPage}\n        //         setCurrentPage={setCurrentPage}\n        //         totalDatas={totalDatas}\n        //       />\n        //     )}\n        //   </div>\n        //   <div className=\"h-full overflow-scroll p-4\">\n        //     <div className=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-2 2xl:grid-cols-2 gap-4\">\n        //       {map(\n        //         organizations,\n        //         ({\n        //           _id,\n        //           image,\n        //           name,\n        //           tradetypes,\n        //           categories,\n        //           subcategories,\n        //           region,\n        //           district,\n        //           phone,\n        //           email,\n        //         }) => (\n        //           <div\n        //             key={uniqueId(\"organization\")}\n        //             className=\"bg-white-900 overflow-hidden rounded shadow-lg border-t-4 border-amber-500 flex flex-col justify-between\"\n        //           >\n        //             <CardLogo\n        //               logo={image}\n        //               name={name}\n        //               region={region}\n        //               district={district}\n        //             />\n        //             <CardInfo\n        //               translations={translations}\n        //               _id={_id}\n        //               isOrganization={!!organization}\n        //               logged={logged}\n        //               tradetypes={tradetypes}\n        //               categories={categories}\n        //               subcategories={subcategories}\n        //               region={region}\n        //               district={district}\n        //               phone={phone}\n        //               email={email}\n        //             />\n        //           </div>\n        //         )\n        //       )}\n        //     </div>\n        //   </div>\n        // </div>\n    );\n};\n\nexport default Organizations;\n"],"names":["categoriesWithSubcategories","categories","useSelector","state","id","subID","useParams","category","find","_id","subCategories","subcategories","nestedSubCategories","map","sub","subcategory","className","to","src","image","alt","name","tgMembers","CategoryCard","handleClickCategory","onClick","useDispatch","selectedCategory","setSelectedCategory","useState","isSubCategory","index","dispatch","t","useTranslation","navigate","getTranslations","useNavigate","logged","userData","organization","login","organizations","loading","isOrganization","order","tradetypes","regions","districts","filter","currentPage","setCurrentPage","totalDatas","setTotalDatas","modalBody","setModalBody","modalVisible","setModalVisible","filterVisible","setFilterVisible","filterBody","setFilterBody","useEffect","data","page","count","getOrganizations","getOrganizationsCount","then","payload","totalCount","error","Filter","PageHeader","countPage","countTitle","mainTitle","filterBtnClick"],"sourceRoot":""}