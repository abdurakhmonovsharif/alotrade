{"version":3,"file":"static/js/181.b0fb30ac.chunk.js","mappings":"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","sources":["Components/OrderCard/OrderCardMain.js","Pages/User/Announcements/MainAnnouncements.js","Pages/User/Carousels/MainCarousel.js","Pages/User/Carousels/OrderCarousel.js","Components/ProductCard/MainProductCard.js","Pages/User/Main/MainProducts.js","Pages/User/Main/Main.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport CardBody from \"./CardBody\";\nimport CardAdditional from \"./CardAdditional\";\n// import CardFooter from \"./CardFooter\";\n// import CardEdit from \"./CardEdit\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardHeader,\n  CardActions,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport UniversalModal from \"../Modal/UniversalModal\";\n\nconst OrderCardMain = ({\n  order,\n  // editHandler,\n  // deleteHandler,\n  logged,\n  // translations,\n}) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const navigate = useNavigate();\n\n  const { userData } = useSelector((state) => state.login);\n  const {\n    // _id,\n    // tradetypes,\n    region,\n    // district,\n    // categories,\n    // subcategories,\n    name,\n    description,\n    // status,\n    // currency,\n    // minPrice,\n    // maxPrice,\n    images,\n    position,\n    user,\n    createdAt,\n    organization,\n    isImg,\n  } = order;\n  // const isCustomer = userData?.user?._id === user?._id;\n  const phone = organization ? organization?.phone : user?.phone;\n  const isOrganization = userData?.organization;\n  return (\n    <>\n      <div\n        className='w-full h-full cursor-pointer'\n        onClick={() => {\n          logged ? navigate(`/orders/${order._id}`) : setModalVisible(true);\n        }}\n      >\n        <div className='w-full h-full'>\n          <Card\n            sx={{\n              height: \"100%\",\n              position: \"relative\",\n              borderRadius: \"18px\",\n              width: \"100%\",\n              // \"@media (max-width: 600px)\": {\n              //   width: \"250px\",\n              // },\n              boxShadow: \"2px 2px 25px 1px rgba(0, 0, 0, 0.1)\",\n            }}\n            variant='outlined'\n          >\n            <div class='absolute text-[10px] md:text-[16px] top-0 right-0 bg-green-500 shadow-lg text-white cursor-pointer px-3 text-center justify-center items-center py-1 rounded-lg flex space-x-2 flex-row'>\n              Актуально\n            </div>\n            <CardHeader\n              sx={{\n                paddingY: \"13px\",\n                \"@media (max-width: 600px)\": {\n                  paddingY: \"5px\",\n                },\n                borderBottom: \"1px solid #eee\",\n              }}\n              avatar={\n                <Avatar\n                  sx={{\n                    \"@media (max-width: 600px)\": {\n                      width: \"25px\",\n                      height: \"25px\",\n                    },\n                  }}\n                  src={organization ? organization?.image : user?.image}\n                  aria-label='recipe'\n                ></Avatar>\n              }\n              action={<IconButton aria-label='like'></IconButton>}\n              title={\n                <div className='flex flex-col items-star leading-4 md:leading-5 pt-1'>\n                  <span className='text-[14px] md:text-[16px] font-bold'>\n                    {organization\n                      ? organization?.name\n                      : user?.firstname + \" \" + user?.lastname}\n                  </span>\n                  <span className='text-[11px] md:text-[12px] font-semibold'>\n                    {\" \"}\n                    {new Date(createdAt).toLocaleDateString()}\n                  </span>\n                </div>\n              }\n            />\n            {/* <CardMedia\n        component='img'\n        sx={{ height: 180 }}\n        image='https://st4.depositphotos.com/14431644/22076/i/600/depositphotos_220767694-stock-photo-handwriting-text-writing-example-concept.jpg'\n        alt='Paella dish'\n      /> */}\n            <CardContent\n              sx={{\n                \"@media (max-width: 600px)\": {\n                  paddingTop: \"2px\",\n                  paddingX: \"20px\",\n                },\n                paddingTop: \"8px\",\n                paddingX: \"30px\",\n                paddingBottom: \"2px\",\n              }}\n            >\n              <Typography\n                sx={{\n                  marginTop: \"4px\",\n                  fontFamily: \"'Rubik', sans-serif\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  display: \"-webkit-box\",\n                  WebkitLineClamp: \"2\",\n\n                  WebkitBoxOrient: \"vertical\",\n                  fontSize: \"18px\",\n                  \"@media (max-width: 600px)\": {\n                    fontSize: \"14px\",\n                    WebkitLineClamp: \"1\",\n                  },\n                  fontWeight: \"600\",\n                }}\n                gutterBottom\n                component='div'\n              >\n                {name}\n              </Typography>\n              <Typography\n                variant='body2'\n                color='text.secondary'\n                sx={{\n                  fontFamily: \"'Rubik', sans-serif\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  display: \"-webkit-box\",\n                  WebkitLineClamp: \"3\",\n\n                  WebkitBoxOrient: \"vertical\",\n                  fontSize: \"14px\",\n                  \"@media (max-width: 600px)\": {\n                    fontSize: \"12px\",\n                    WebkitLineClamp: \"2\",\n                  },\n                  fontWeight: \"400\",\n                }}\n              >\n                {description}\n              </Typography>\n            </CardContent>\n            {/* <CardActions sx={{ paddingX: \"30px\" }}>\n        <Button size='small'>Подробнее</Button>\n      </CardActions> */}\n          </Card>\n        </div>\n      </div>\n      <UniversalModal\n        body={\"warningSignIn\"}\n        isOpen={modalVisible}\n        closeModal={() => setModalVisible(false)}\n        toggleModal={() => setModalVisible(false)}\n      />\n    </>\n    // <Link\n    //   to={logged ? `/orders/${order._id}` : \"/\"}\n    //   className=\"relative md:p-4 flex flex-col gap-4 max-w-[680px] h-[180px] rounded-xl group  space-x-6 bg-white shadow-xl hover:rounded-2xl\"\n    // >\n    //   <div class=\"absolute text-[10px] md:text-[16px] top-1 right-1 bg-green-500 shadow-lg text-white cursor-pointer px-3 text-center justify-center items-center py-1 rounded-lg flex space-x-2 flex-row\">\n    //     Актуально\n    //   </div>\n    //   {isImg && (\n    //     <img\n    //       class=\"mx-auto w-full md:block w-4/12 h-40 rounded-lg hidden\"\n    //       alt=\"art cover\"\n    //       loading=\"lazy\"\n    //       src={images}\n    //     />\n    //   )}\n    //   {/* sm:w-8/12 */}\n    //   <CardHeader\n    //     createdAt={createdAt}\n    //     organization={organization}\n    //     user={user}\n    //   />\n    //   <CardBody title={name} description={description} />\n    // </Link>\n  );\n};\n\nexport default OrderCardMain;\n","import { Button } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport UniversalModal from '../../../Components/Modal/UniversalModal';\nimport useWindowSize from '../../../hooks/useWindowSize';\nimport { filterAnns } from '../../Filter/filterSlice';\nimport AnnouncementCard from './AnnouncementCard';\nimport { clearAnnsData, getAnns, getAnnsCount } from './announcementSlice';\n\nconst MainAnnouncements = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const {\n    logged,\n    userData: { user, organization },\n  } = useSelector((state) => state.login);\n\n  const { width } = useWindowSize();\n\n  const [mainAnns, setMainAnns] = useState([]);\n\n  const { anns } = useSelector((state) => state.anns);\n  const {\n    product,\n    categories,\n    subcategories,\n    subcategories2,\n    tradetypes,\n    regions,\n    districts,\n    name,\n  } = useSelector((state) => state.filter);\n  const [productId, setProductId] = useState(null);\n  const [totalDatas, setTotalDatas] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [countPage, setCountPage] = useState(width < 720 ? 10 : 15);\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalVisibleOrg, setModalVisibleOrg] = useState(false);\n\n  const [modalBody, setModalBody] = useState(null);\n\n  const [filterVisible, setFilterVisible] = useState(false);\n  const [filterBody, setFilterBody] = useState(null);\n\n  const closeHandler = () => {\n    setModalVisible(false);\n  };\n\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  const openModal = (body) => {\n    setModalBody(body);\n    setModalVisible(true);\n    setProductId(null);\n  };\n\n  const deleteHandler = (id) => {\n    setProductId(id);\n    setModalBody('approve');\n    setModalVisible(true);\n  };\n\n  const editHandler = (id) => {\n    setProductId(id);\n    setModalBody('createProduct');\n    setModalVisible(true);\n  };\n\n  const handleFilter = (e) => {\n    const value = e.target.value;\n    dispatch(filterAnns(value));\n  };\n\n  useEffect(() => {\n    const locData = location?.state?.category?.value;\n    const data = {\n      page: 0,\n      count: countPage + currentPage * (width < 720 ? 10 : 15),\n      post: 'all',\n      categories: [],\n      subcategories: [],\n      subcategories2: [],\n      tradetypes: [],\n      regions: [],\n      districts: [],\n      user: user?._id,\n      name,\n    };\n\n    if (locData) {\n      data.categories = [...categories, locData];\n    }\n    dispatch(getAnns(data));\n    dispatch(getAnnsCount(data)).then(({ payload: { totalCount }, error }) => {\n      if (!error) {\n        setTotalDatas(totalCount);\n      }\n    });\n\n    // const tempArr = [...mainAnns];\n    // tempArr[currentPage] = anns;\n    // setMainAnns(tempArr);\n\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    dispatch,\n    product,\n    currentPage,\n    countPage,\n    categories,\n    subcategories,\n    subcategories2,\n    tradetypes,\n    regions,\n    districts,\n    user,\n    name,\n    width,\n  ]);\n\n  // useEffect(() => {\n  //\n  //   const tempArr = [...mainAnns];\n  //   tempArr[currentPage] = anns;\n  //   setMainAnns(tempArr);\n  // }, [anns]);\n\n  useEffect(() => {\n    setCountPage(width < 720 ? 10 : 15);\n  }, [width]);\n\n  useEffect(() => {\n    dispatch(clearAnnsData());\n  }, [dispatch]);\n\n  return (\n    <div className='flex flex-col w-full py-5 md:py-5'>\n      <div className='grid grid-cols-2 sm:grid-cols-3 items-center w-full px-3 sm:px-0'>\n        <button\n          onClick={() => {\n            logged\n              ? organization?.is_active\n                ? navigate('/create_announcement')\n                : setModalVisibleOrg(true)\n              : openModal();\n          }}\n          className='hidden sm:flex uppercase shadow md:ml-0 w-fit h-fit bg-alotrade hover:bg-alotrade/80 focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-2 md:px-10 px-4 rounded'\n        >\n          {'Создать Рекламу'}\n        </button>\n        <h2 className='md:text-[36px] text-[16px] font-bold justify-self-start sm:justify-self-center'>\n          {'РЕКЛАМЫ'}\n        </h2>\n        <Link\n          to='/announcements'\n          className='block uppercase shadow md:ml-0 justify-self-end w-fit h-fit  bg-orange-500 hover:bg-orange-400 focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-2 md:px-10 px-4 rounded'\n        >\n          {'Все рекламы'}\n        </Link>\n      </div>\n      <div className='grid lg:grid-cols-3 md:grid-cols-2 items-center justify-center md:gap-2 my-5 px-[-60px] md:px-0'>\n        {anns &&\n          anns?.map((ann, ind) => (\n            <AnnouncementCard\n              key={ann?._id}\n              ann={ann}\n            />\n          ))}\n      </div>\n      <div className='flex justify-center items-center w-full py-2'>\n        {Math.ceil(totalDatas / countPage) != currentPage + 1 && (\n          <Button\n            color='alotrade'\n            variant='contained'\n            onClick={() => setCurrentPage(currentPage + 1)}\n          >\n            Показать еще\n          </Button>\n        )}\n      </div>\n\n      <UniversalModal\n        body={'warningSignIn'}\n        isOpen={modalVisible}\n        typeOfWarning={'user'}\n        closeModal={() => setModalVisible(false)}\n      />\n\n      <UniversalModal\n        body={'warningOrg'}\n        isOpen={modalVisibleOrg}\n        closeModal={() => setModalVisibleOrg(false)}\n        toggleModal={() => setModalVisibleOrg(false)}\n      />\n    </div>\n  );\n};\n\nexport default MainAnnouncements;\n","import React, { useEffect, useState } from \"react\";\nimport bgImg from \"../../../assets/background/bg_image.png\";\nimport bgImg1 from \"../../../assets/background/1.png\";\nimport bgImg2 from \"../../../assets/background/2.png\";\nimport bgImg3 from \"../../../assets/background/3.png\";\nimport Carousel from \"react-multi-carousel\";\nimport Api from \"../../../Config/Api\";\n\nconst MainCarousel = ({ bgImgs }) => {\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n  };\n\n  return (\n    <div>\n      {bgImgs && (\n        <Carousel\n          responsive={responsive}\n          autoPlay={true}\n          infinite={true}\n          autoPlaySpeed={3000}\n          removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n        >\n          {bgImgs &&\n            bgImgs\n              ?.filter((el) => el.name)\n              ?.map((el, index) => (\n                <div\n                  key={index}\n                  className='w-[100%] h-[200px] md:h-[500px] p-2 md:p-5 rounded-lg overflow-hidden'\n                >\n                  <img\n                    src={el.image}\n                    alt='bg'\n                    className='w-full h-full object-cover rounded-3xl'\n                  />\n                </div>\n              ))}\n        </Carousel>\n      )}\n    </div>\n  );\n};\n\nexport default MainCarousel;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOrders, getOrdersCount } from \"../Orders/orderSlice\";\nimport { map, uniqueId } from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\nimport { getTranslations } from \"../../../translation\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport OrderCardMain from \"../../../Components/OrderCard/OrderCardMain\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport UniversalModal from \"../../../Components/Modal/UniversalModal\";\n\nconst OrderCarousel = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { t } = useTranslation([\"common\"]);\n  const translations = getTranslations(t);\n  const { orders } = useSelector((state) => state.orders);\n  const {\n    order,\n    categories,\n    subcategories,\n    tradetypes,\n    regions,\n    districts,\n    name,\n  } = useSelector((state) => state.filter);\n  const { logged, userData } = useSelector((state) => state.login);\n  //   const [orderId, setOrderId] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalDatas, setTotalDatas] = useState(0);\n  const countPage = 10;\n  const { user } = userData;\n  const { organization } = userData;\n\n  const responsive = {\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 2.3,\n      slidesToSlide: 1.3, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n      slidesToSlide: 2, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 540, min: 0 },\n      items: 1,\n      slidesToSlide: 1,\n      partialVisibilityGutter: 80, // optional, default to 1.\n    },\n  };\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalVisibleOrg, setModalVisibleOrg] = useState(false);\n\n  const openModal = () => {\n    setModalVisible(true);\n  };\n\n  const closeHandler = () => {\n    setModalVisible(false);\n  };\n\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  useEffect(() => {\n    const data = {\n      page: 0,\n      count: 4,\n      order,\n      categories: [],\n      subcategories: [],\n      tradetypes: [],\n      regions: [],\n      districts: [],\n      user: user?._id,\n      name,\n    };\n    setCurrentPage(0);\n    dispatch(getOrders(data));\n    dispatch(getOrdersCount(data)).then(\n      ({ error, payload: { totalCount } }) => {\n        if (!error) {\n          setTotalDatas(totalCount);\n        }\n      }\n    );\n  }, [\n    dispatch,\n    order,\n    categories,\n    subcategories,\n    tradetypes,\n    regions,\n    districts,\n    user,\n    name,\n  ]);\n  useEffect(() => {\n    const data = {\n      page: currentPage,\n      count: countPage,\n      order,\n      categories,\n      subcategories,\n      tradetypes,\n      regions,\n      districts,\n      user: user?._id,\n      name,\n    };\n    dispatch(getOrders(data));\n    dispatch(getOrdersCount(data)).then(\n      ({ error, payload: { totalCount } }) => {\n        if (!error) {\n          setTotalDatas(totalCount);\n        }\n      }\n    );\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, order, currentPage, countPage]);\n  return (\n    <div className='pb-3 md:pb-10 pt-3 md:pt-8 w-screen md:w-full md:container'>\n      <div className='grid grid-cols-2 sm:grid-cols-3 items-center w-full px-5 sm:px-0'>\n        <button\n          onClick={() => {\n            logged\n              ? organization?.is_active\n                ? navigate(\"/create_order\")\n                : setModalVisibleOrg(true)\n              : openModal();\n          }}\n          className='hidden sm:flex uppercase shadow md:ml-0 w-fit h-fit bg-alotrade hover:bg-alotrade/80 focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-2 md:px-10 px-4 rounded'\n        >\n          {\"Создать заявку\"}\n        </button>\n        <h2 className='md:text-[36px] text-[16px] font-bold justify-self-start sm:justify-self-center ml-2 md:ml-0'>\n          {\"ЗАКАЗЫ\"}\n        </h2>\n        <Link\n          to='/orders'\n          className='block uppercase shadow md:ml-0 justify-self-end w-fit h-fit  bg-orange-500 hover:bg-orange-400 focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-2 md:px-10 px-4 rounded'\n        >\n          Все заявки\n        </Link>\n      </div>\n      <Carousel\n        partialVisible\n        responsive={responsive}\n        sliderClass='flex justify gap-[8px] md:gap-[10px]'\n        autoPlay={true}\n        autoPlaySpeed={3000}\n        removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\n        infinite={true}\n        itemClass='pb-5 pt-5'\n      >\n        {map(orders, (order) => (\n          <OrderCardMain\n            translations={translations}\n            logged={logged}\n            key={uniqueId()}\n            order={order}\n          />\n        ))}\n      </Carousel>\n      <UniversalModal\n        body={\"warningSignIn\"}\n        isOpen={modalVisible}\n        typeOfWarning={\"user\"}\n        closeModal={() => setModalVisible(false)}\n      />\n      <UniversalModal\n        body={\"warningOrg\"}\n        isOpen={modalVisibleOrg}\n        closeModal={() => setModalVisibleOrg(false)}\n        toggleModal={() => setModalVisibleOrg(false)}\n      />\n    </div>\n  );\n};\n\nexport default OrderCarousel;\n","import React, { useEffect, useState } from \"react\";\nimport CardHeader from \"./CardHeader\";\nimport CardBody from \"./CardBody\";\nimport CardEdit from \"./CardEdit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport noImage from \"../../assets/images/no-image.svg\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { IoLocationOutline } from \"react-icons/io5\";\nimport { MdFavorite } from \"react-icons/md\";\nimport {\n  addFavorite,\n  deleteFavorite,\n} from \"../../Pages/User/Products/productSlice\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  IconButton,\n  Stack,\n  Typography,\n  CardHeader as MuiCardHeader,\n} from \"@mui/material\";\nimport {\n  Favorite,\n  FavoriteBorderOutlined,\n  LocalPhoneOutlined,\n  SendOutlined,\n} from \"@mui/icons-material\";\n\nconst MainProductCard = ({ product, editHandler, deleteHandler, logged }) => {\n  const { userData } = useSelector((state) => state.login);\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n  const {\n    _id,\n    tradetypes,\n    region,\n    district,\n    categories,\n    subcategories,\n    name,\n    description,\n    status,\n    currency,\n    minPrice,\n    maxPrice,\n    images,\n    position,\n    user,\n    createdAt,\n    organization,\n  } = product;\n  const isCustomer = userData?.user?._id === user?._id;\n  const phone = organization?.phone;\n  const isOrganization = !!userData?.organization?._id;\n  const isProfileProducts = location.pathname === \"/profile/products\";\n\n  if (isOrganization && logged && isProfileProducts) {\n    return (\n      <div\n        className={`w-full shadow-2xl mt-5 rounded-xl bg-white-900 bg-white border-[1px] border-[#01c2cc]`}\n      >\n        <div className='text-sm w-full h-full flex flex-col justify-between rounded-xl'>\n          <Link\n            to={`/products/${_id}`}\n            className='text-sm w-full h-full flex flex-col justify-between rounded-xl'\n          >\n            <p className='pl-2 border-b my-1 flex items-center text-neutral-500 text-sm'>\n              <IoLocationOutline className='' />\n              <span className='text-[10px] md:text-[14px] ml-2'>\n                {region ? region?.name : \"Respublika bo'ylab\"}\n              </span>\n            </p>\n            <div className='flex overflow-hidden items-center justify-center bg-white rounded-t-xl'>\n              <img\n                src={images[0] ? images[0] : noImage}\n                className='rounded object-contain h-[150px] md:h-[200px]'\n                alt='Product'\n              />\n            </div>\n            {/* Card header */}\n            <CardHeader\n              logged={logged}\n              user={user}\n              position={position}\n              createdAt={createdAt}\n              organization={organization}\n            />\n            <CardBody\n              region={region}\n              name={name}\n              maxPrice={maxPrice}\n              minPrice={minPrice}\n              description={description}\n              currency={currency}\n            />\n          </Link>\n          <CardEdit\n            editHandler={editHandler}\n            productId={_id}\n            deleteHandler={deleteHandler}\n            position={position}\n          />\n        </div>\n      </div>\n    );\n  }\n  return (\n    <Card\n      onClick={() => navigate(`/products/${_id}`)}\n      sx={{\n        cursor: \"pointer\",\n        maxWidth: 400,\n        boxShadow: \"2px 2px 25px 1px rgba(0, 0, 0, 0.1)\",\n        borderRadius: \"21px\",\n      }}\n      variant='outlined'\n    >\n      <MuiCardHeader\n        sx={{ paddingY: \"10px\" }}\n        avatar={\n          <Avatar\n            size='small'\n            sx={{ width: \"28px\", height: \"28px\" }}\n            aria-label='recipe'\n          ></Avatar>\n        }\n        title={\n          <span className='text-[16px] font-semibold'>\n            {organization\n              ? organization?.name\n              : user?.firstname + \" \" + user?.lastname}\n          </span>\n        }\n      />\n      <CardMedia\n        component='img'\n        sx={{ height: 210, paddingX: \"13px\" }}\n        image={images[0] ? images[0] : noImage}\n        alt='Paella dish'\n      />\n      <CardContent\n        sx={{ paddingTop: \"8px\", paddingX: \"30px\", paddingBottom: \"2px\" }}\n      >\n        <Typography\n          sx={{\n            fontFamily: \"'Rubik', sans-serif\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            display: \"-webkit-box\",\n            WebkitLineClamp: \"2\",\n            WebkitBoxOrient: \"vertical\",\n            fontSize: \"16px\",\n            fontWeight: \"600\",\n          }}\n          gutterBottom\n          component='div'\n        >\n          {name}\n        </Typography>\n        <div className='flex flex-row items-center w-full justify-between mb-1'>\n          <span className='text-[16px] font-semibold'>{\"Цена:\"}</span>\n          <span className='text-[18px] font-bold'>\n            {maxPrice ? maxPrice.toLocaleString(\"ru-RU\") : 0} {currency}\n          </span>\n        </div>\n        <div className='flex flex-row items-center w-full justify-between'>\n          <span className='text-[14px] font-normal text-neutral-700'>{`Регион: ${\n            region ? region?.name : \"Respublika bo'ylab\"\n          }`}</span>\n        </div>\n      </CardContent>\n      <CardActions\n        sx={{\n          paddingTop: 0,\n          paddingX: \"10px\",\n          paddingLeft: \"20px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Stack direction='row' spacing={0.3}>\n          <IconButton aria-label='delete'>\n            <LocalPhoneOutlined />\n          </IconButton>\n          {/* <IconButton aria-label='delete'>\n            <SendOutlined />\n          </IconButton> */}\n        </Stack>\n        <IconButton\n          aria-label='like'\n          onClick={(e) => {\n            e.stopPropagation();\n            if (product?.favorites.includes(userData?.user?._id)) {\n              dispatch(\n                deleteFavorite({\n                  productId: product._id,\n                  userId: userData?.user?._id,\n                })\n              );\n            } else {\n              dispatch(\n                addFavorite({\n                  productId: product._id,\n                  userId: userData?.user?._id,\n                })\n              );\n            }\n          }}\n        >\n          {!product?.favorites.includes(userData?.user?._id) ? (\n            <FavoriteBorderOutlined\n              size='small'\n              sx={{\n                \"@media (max-width: 600px)\": {\n                  fontSize: \"20px\",\n                },\n              }}\n            />\n          ) : (\n            <Favorite\n              sx={{\n                fill: \"#e5383b\",\n                \"@media (max-width: 600px)\": {\n                  fontSize: \"20px\",\n                },\n              }}\n            />\n          )}\n        </IconButton>\n      </CardActions>\n    </Card>\n\n    // <div\n    //   className={`w-full relative shadow-2xl rounded-xl block h-full bg-white border-[1px] border-[#01c2cc]`}\n    // >\n    //   {logged && (\n    //     <button\n    //       className=\"absolute top-0 right-2 z-6\"\n    //       onClick={() => {\n    //         if (product?.favorites.includes(userData?.user?._id)) {\n    //           dispatch(\n    //             deleteFavorite({\n    //               productId: product._id,\n    //               userId: userData.user._id,\n    //             })\n    //           );\n    //         } else {\n    //           dispatch(\n    //             addFavorite({\n    //               productId: product._id,\n    //               userId: userData.user._id,\n    //             })\n    //           );\n    //         }\n    //       }}\n    //     >\n    //       <MdFavorite\n    //         size={24}\n    //         className={`${\n    //           product?.favorites.includes(userData.user._id)\n    //             ? \"fill-alotrade\"\n    //             : \"fill-slate-300\"\n    //         }`}\n    //       />\n    //     </button>\n    //   )}\n    //   <Link\n    //     to={`/products/${_id}`}\n    //     className=\"text-sm w-full h-full flex flex-col rounded-xl\"\n    //   >\n    //     <p className=\"pl-2 border-b my-1 flex items-center text-neutral-500 text-sm\">\n    //       <IoLocationOutline className=\"\" />\n    //       <span className=\"text-[10px] md:text-[14px] ml-2\">\n    //         {region ? region?.name : \"Respublika bo'ylab\"}\n    //       </span>\n    //     </p>\n    //     <div className=\"flex relative items-center justify-center bg-white rounded-t-xl\">\n    //       <img\n    //         src={images[0] ? images[0] : noImage}\n    //         className=\"rounded object-contain h-[150px] md:h-[200px]\"\n    //         alt=\"Product\"\n    //       />\n    //     </div>\n    //     {/* Card header */}\n\n    //     {/* <CardHeader\n    //       logged={logged}\n    //       user={user}\n    //       position={position}\n    //       createdAt={createdAt}\n    //       organization={organization}\n    //     /> */}\n\n    //     <CardBody\n    //       region={region}\n    //       name={name}\n    //       maxPrice={maxPrice}\n    //       minPrice={minPrice}\n    //       description={description}\n    //       currency={currency}\n    //     />\n    //   </Link>\n    // </div>\n  );\n};\n\nexport default MainProductCard;\n","import { map, uniqueId } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ProductCard from \"../../../Components/ProductCard/ProductCard\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\nimport { getProducts } from \"../Products/productSlice\";\nimport UniversalModal from \"../../../Components/Modal/UniversalModal\";\nimport { useState } from \"react\";\nimport MainProductCard from \"../../../Components/ProductCard/MainProductCard\";\n\nconst MainProducts = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { width } = useWindowSize();\n  const {\n    logged,\n    userData: { user },\n  } = useSelector((state) => state.login);\n  const { products } = useSelector((state) => state.products);\n\n  const [modalVisible, setModalVisible] = useState(false);\n\n  const openModal = () => {\n    setModalVisible(true);\n  };\n\n  useEffect(() => {\n    let count = 20;\n    if (width < 720) {\n      count = 10;\n    }\n    const data = {\n      page: 0,\n      count: count,\n      user: user?._id,\n    };\n    dispatch(getProducts(data));\n  }, [dispatch, width, user]);\n\n  return (\n    <div className='flex flex-col mt-4'>\n      <div className='grid grid-cols-2 sm:grid-cols-3 items-center w-full px-3 sm:px-0'>\n        <div className='hidden sm:flex'></div>\n        {/* <button\n          onClick={() => {\n            logged ? navigate(\"/create_announcement\") : openModal();\n          }}\n          className='hidden sm:flex uppercase shadow md:ml-0 w-fit h-fit bg-alotrade hover:bg-alotrade/80 focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-2 md:px-10 px-4 rounded'\n        >\n          {\"Создать Рекламу\"}\n        </button> */}\n        <h2 className='md:text-[36px] text-[16px] font-bold justify-self-start sm:justify-self-center'>\n          {\"ТОВАРЫ\"}\n        </h2>\n        <Link\n          to='/products'\n          className='block uppercase shadow md:ml-0 justify-self-end w-fit h-fit  bg-orange-500 hover:bg-orange-400 focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-2 md:px-10 px-4 rounded'\n        >\n          {\"Все товары\"}\n        </Link>\n      </div>\n      <div className='grid grid-cols-2 md:grid-cols-4 gap-2 py-4 w-full h-fit items-stretch'>\n        {map(products, (product) => (\n          <ProductCard logged={logged} key={uniqueId()} product={product} />\n        ))}\n      </div>\n      {/* <div className='flex justify-center py-2'>\n        <Link\n          to='/products'\n          className='block uppercase shadow md:ml-0  bg-orange-500 hover:bg-orange-400 focus:shadow-outline focus:outline-none text-white md:text-xs text-[10px] py-2 md:px-10 px-4 rounded'\n        >\n          Все товары\n        </Link>\n      </div> */}\n      <UniversalModal\n        body={\"warningSignIn\"}\n        isOpen={modalVisible}\n        typeOfWarning={\"user\"}\n        closeModal={() => setModalVisible(false)}\n      />\n    </div>\n  );\n};\n\nexport default MainProducts;\n","import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { deleteOrder, getOrders, getOrdersCount } from \"../Orders/orderSlice\";\n// import { map, uniqueId } from \"lodash\";\n// import OrderCard from \"../../../Components/OrderCard/OrderCard\";\nimport UniversalModal from '../../../Components/Modal/UniversalModal';\n// import MainPageHeader from \"../../../Components/MainPageHeader/MainPageHeader\";\n// import Pagination from \"../../../Components/Pagination/Pagination\";\n// import { useTranslation } from \"react-i18next\";\n// import { getTranslations } from \"../../../translation\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Api from '../../../Config/Api';\nimport { clearFilters } from '../../Filter/filterSlice';\nimport MainAnnouncements from '../Announcements/MainAnnouncements';\nimport MainCarousel from '../Carousels/MainCarousel';\nimport OrderCarousel from '../Carousels/OrderCarousel';\nimport MainProducts from './MainProducts';\n\nconst Main = () => {\n  // const dispatch = useDispatch();\n  // const { t } = useTranslation([\"common\"]);\n  // const translations = getTranslations(t);\n  // const { orders } = useSelector((state) => state.orders);\n  // const {\n  //   order,\n  //   categories,\n  //   subcategories,\n  //   tradetypes,\n  //   regions,\n  //   districts,\n  //   name,\n  // } = useSelector((state) => state.filter);\n  // const { logged, userData } = useSelector((state) => state.login);\n  // const [orderId, setOrderId] = useState(null);\n  // const [currentPage, setCurrentPage] = useState(0);\n  // const [totalDatas, setTotalDatas] = useState(0);\n  // const countPage = 10;\n  // const { user } = userData;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalBody, setModalBody] = useState(null);\n\n  const [bgImgs, setBgImgs] = useState(null);\n\n  const fetchBgImgs = async () => {\n    try {\n      const res = await Api.get('/extra/bgimg');\n      setBgImgs(res.data);\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    fetchBgImgs();\n  }, []);\n\n  const closeHandler = () => {\n    setModalVisible(false);\n  };\n\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  // const deleteHandler = (id) => {\n  //   setOrderId(id);\n  //   setModalBody(\"approve\");\n  //   setModalVisible(true);\n  // };\n\n  // const editHandler = (id) => {\n  //   setOrderId(id);\n  //   setModalBody(\"createOrder\");\n  //   setModalVisible(true);\n  // };\n\n  // const deleteOrderById = () => {\n  //   orderId &&\n  //     dispatch(deleteOrder({ id: orderId })).then(({ error }) => {\n  //       if (!error) {\n  //         setModalVisible(false);\n  //         setOrderId(null);\n  //       }\n  //     });\n  // };\n\n  const handleCreateOrder = () => {\n    navigate('/create_order');\n  };\n\n  useEffect(() => {\n    dispatch(clearFilters());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   const data = {\n  //     page: 0,\n  //     count: 4,\n  //     order,\n  //     categories,\n  //     subcategories,\n  //     tradetypes,\n  //     regions,\n  //     districts,\n  //     user: user?._id,\n  //     name,\n  //   };\n  //   setCurrentPage(0);\n  //   dispatch(getOrders(data));\n  //   dispatch(getOrdersCount(data)).then(\n  //     ({ error, payload: { totalCount } }) => {\n  //       if (!error) {\n  //         setTotalDatas(totalCount);\n  //       }\n  //     }\n  //   );\n  // }, [\n  //   dispatch,\n  //   order,\n  //   categories,\n  //   subcategories,\n  //   tradetypes,\n  //   regions,\n  //   districts,\n  //   user,\n  //   name,\n  // ]);\n  // useEffect(() => {\n  //   const data = {\n  //     page: currentPage,\n  //     count: countPage,\n  //     order,\n  //     categories,\n  //     subcategories,\n  //     tradetypes,\n  //     regions,\n  //     districts,\n  //     user: user?._id,\n  //     name,\n  //   };\n  //   dispatch(getOrders(data));\n  //   dispatch(getOrdersCount(data)).then(\n  //     ({ error, payload: { totalCount } }) => {\n  //       if (!error) {\n  //         setTotalDatas(totalCount);\n  //       }\n  //     }\n  //   );\n  //   //    eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [dispatch, order, currentPage, countPage]);\n  // pt-[120px] md:pt-[130px] lg:pt-[160px]\n  return (\n    <div\n      id='home'\n      className={`relative overflow-y home-bgImg`}\n    >\n      {/* {logged ? (\n        <div className=\"bg-white-900 py-3 shadow-md flex justify-between items-center px-4\">\n          <h3 className=\"font-amazonbold\">\n            {translations.jami_buyurtmalar}: {totalDatas} {translations.ta}\n          </h3>\n          {totalDatas > 0 && (\n            <Pagination\n              currentPage={currentPage}\n              countPage={countPage}\n              setCurrentPage={setCurrentPage}\n              totalDatas={totalDatas}\n            />\n          )}\n        </div>\n      ) : (\n        <MainPageHeader\n          translations={translations}\n          countPage={countPage}\n          setCurrentPage={setCurrentPage}\n          currentPage={currentPage}\n          totalDatas={totalDatas}\n        />\n      )}\n      <div className=\"p-4 pt-0 overflow-scroll h-full w-full\">\n        {map(orders, (order) => (\n          <OrderCard\n            translations={translations}\n            logged={logged}\n            key={uniqueId()}\n            order={order}\n            editHandler={editHandler}\n            deleteHandler={deleteHandler}\n          />\n        ))}\n      </div> */}\n      <MainCarousel bgImgs={bgImgs} />\n      <div className='bg-white'>\n        {/* <CategoryCarousels /> */}\n        {/* <MainTabs handleCreateOrder={handleCreateOrder} /> */}\n        <OrderCarousel />\n        <div class='container px-0 md:px-4'>\n          {bgImgs?.some((el) => el.extraimg1) && (\n            <img\n              src={bgImgs?.filter((el) => el.extraimg1)[0]?.extraimg1}\n              className='w-full h-[130px] md:h-[300px] object-cover my-2 rounded-3xl'\n            />\n          )}\n          <MainAnnouncements />\n          {bgImgs?.some((el) => el.extraimg2) && (\n            <img\n              src={bgImgs?.filter((el) => el.extraimg2)[0]?.extraimg2}\n              className='w-full h-[130px] md:h-[300px] object-cover my-2 rounded-3xl'\n            />\n          )}\n          <MainProducts />\n          {/* <Benefits /> */}\n        </div>\n        {/* <HowItWorks />\n        <OrganizationCarousel /> */}\n      </div>\n\n      <UniversalModal\n        isOpen={modalVisible}\n        body={'createOrder'}\n        toggleModal={toggleModal}\n        closeModal={closeHandler}\n      />\n    </div>\n  );\n};\n\nexport default Main;\n"],"names":["order","logged","modalVisible","setModalVisible","useState","navigate","useNavigate","userData","useSelector","state","login","region","name","description","images","position","user","createdAt","organization","isImg","phone","className","onClick","_id","sx","height","borderRadius","width","boxShadow","variant","class","paddingY","borderBottom","avatar","src","image","action","title","firstname","lastname","Date","toLocaleDateString","paddingTop","paddingX","paddingBottom","marginTop","fontFamily","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","fontSize","fontWeight","gutterBottom","component","color","body","isOpen","closeModal","toggleModal","dispatch","useDispatch","location","useLocation","useWindowSize","mainAnns","setMainAnns","anns","product","categories","subcategories","subcategories2","tradetypes","regions","districts","filter","productId","setProductId","totalDatas","setTotalDatas","currentPage","setCurrentPage","countPage","setCountPage","modalVisibleOrg","setModalVisibleOrg","modalBody","setModalBody","filterVisible","setFilterVisible","filterBody","setFilterBody","useEffect","locData","category","value","data","page","count","post","getAnns","getAnnsCount","then","payload","totalCount","error","clearAnnsData","is_active","to","map","ann","ind","AnnouncementCard","Math","ceil","Button","UniversalModal","typeOfWarning","bgImgs","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","autoPlay","infinite","autoPlaySpeed","removeArrowOnDeviceType","el","index","alt","t","useTranslation","translations","getTranslations","orders","getOrders","getOrdersCount","partialVisible","partialVisibilityGutter","sliderClass","itemClass","OrderCardMain","uniqueId","products","getProducts","ProductCard","setBgImgs","async","res","Api","err","fetchBgImgs","clearFilters","id","some","extraimg1","extraimg2"],"sourceRoot":""}