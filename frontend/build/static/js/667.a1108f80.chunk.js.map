{"version":3,"file":"static/js/667.a1108f80.chunk.js","mappings":"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","sources":["Components/OrganizationCard/CardLogo.js","Components/Icons/PhoneIcon.js","Components/OrganizationCard/CardInfo.js","Pages/User/Organizations/Organizations.js"],"sourcesContent":["import React from \"react\";\r\nimport { IoLocationOutline } from \"react-icons/io5\";\r\n\r\nconst CardLogo = ({ logo, name, district, region }) => {\r\n  return (\r\n    <div className=\"flex justify-center p-4 pb-2\">\r\n      {logo ? (\r\n        <img\r\n          src={logo}\r\n          alt={name[0]}\r\n          className=\"w-[130px] h-[130px] rounded-full bg-neutral-200\"\r\n        />\r\n      ) : (\r\n        <h3 className=\"w-[130px] h-[130px] rounded-full bg-neutral-200 flex items-center justify-center text-neutral-500 text-lg\">\r\n          alo\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardLogo;\r\n","import React from \"react\";\r\n\r\nconst PhoneIcon = ({ fill, size }) => {\r\n  return (\r\n    <svg\r\n      stroke=\"currentColor\"\r\n      fill={fill}\r\n      stroke-width=\"0\"\r\n      viewBox=\"0 0 512 512\"\r\n      height={size}\r\n      width={size}\r\n    >\r\n      <path\r\n        stroke-miterlimit=\"10\"\r\n        stroke-width=\"32\"\r\n        d=\"M451 374c-15.88-16-54.34-39.35-73-48.76-24.3-12.24-26.3-13.24-45.4.95-12.74 9.47-21.21 17.93-36.12 14.75s-47.31-21.11-75.68-49.39-47.34-61.62-50.53-76.48 5.41-23.23 14.79-36c13.22-18 12.22-21 .92-45.3-8.81-18.9-32.84-57-48.9-72.8C119.9 44 119.9 47 108.83 51.6A160.15 160.15 0 0083 65.37C67 76 58.12 84.83 51.91 98.1s-9 44.38 23.07 102.64 54.57 88.05 101.14 134.49S258.5 406.64 310.85 436c64.76 36.27 89.6 29.2 102.91 23s22.18-15 32.83-31a159.09 159.09 0 0013.8-25.8C465 391.17 468 391.17 451 374z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default PhoneIcon;\r\n","import React, { useState } from \"react\";\r\nimport { IoCallOutline, IoLocationOutline } from \"react-icons/io5\";\r\nimport { map } from \"lodash\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport PhoneIcon from \"../Icons/PhoneIcon\";\r\n\r\nconst CardInfo = ({\r\n  _id,\r\n  categories,\r\n  subcategories,\r\n  tradetypes,\r\n  phone,\r\n  logged,\r\n  translations,\r\n  name,\r\n  region,\r\n  district,\r\n}) => {\r\n\r\n  const location = useLocation()\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleShow = () => {\r\n    setShow(!show);\r\n  };\r\n  return (\r\n    <div className=\"mt-4 text-neutral-500 flex flex-col justify-between h-full \">\r\n      <div className=\"pl-3 mb-2 border-neutral-400 mx-4\">\r\n        <h3 className=\"text-neutral-600 text-lg font-bold font-amazonbold\">\r\n          {name}\r\n        </h3>\r\n        <div className=\"flex items-center text-neutral-500\">\r\n          <IoLocationOutline />\r\n          <h3 className=\"ml-3 text-sm\">\r\n            {region?.name}, {district?.name}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n\r\n      {location.pathname !== '/' && <div className=\" flex w-full border-t mt-3 text-sm\">\r\n        <p\r\n          onClick={handleShow}\r\n          className=\"w-1/2  bg-[#16a34a] text-white flex items-center justify-center py-1 hover:text-success-500\"\r\n        >\r\n          {show ? phone : <PhoneIcon size={20} fill=\"#fff\" />}\r\n        </p>\r\n        <Link\r\n          to=\"/organization\"\r\n          state={{ _id }}\r\n          className=\"w-1/2 bg-orange-500 flex items-center justify-center py-1 hover:text-success-500 text-white\"\r\n        >\r\n          {translations.koproq_malumot}\r\n        </Link>\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CardLogo from \"../../../Components/OrganizationCard/CardLogo\";\r\nimport CardInfo from \"../../../Components/OrganizationCard/CardInfo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrganizations, getOrganizationsCount } from \"./organizationSlice\";\r\nimport { map, uniqueId } from \"lodash\";\r\nimport Pagination from \"../../../Components/Pagination/Pagination\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getTranslations } from \"../../../translation\";\r\nimport Filter from \"../../Filter/Filter\";\r\nimport PageHeader from \"../../../Components/PageHeaders/PageHeader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Loading } from \"@nextui-org/react\";\r\n\r\nconst Organizations = () => {\r\n  const dispatch = useDispatch();\r\n  const { t } = useTranslation([\"common\"]);\r\n  const translations = getTranslations(t);\r\n  const navigate = useNavigate();\r\n  const {\r\n    logged,\r\n    userData: { organization },\r\n  } = useSelector((state) => state.login);\r\n  const { organizations, loading } = useSelector(\r\n    (state) => state.organizations\r\n  );\r\n  const isOrganization = !!organization?._id;\r\n  const {\r\n    order,\r\n    categories,\r\n    subcategories,\r\n    tradetypes,\r\n    regions,\r\n    districts,\r\n    name,\r\n  } = useSelector((state) => state.filter);\r\n\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalDatas, setTotalDatas] = useState(0);\r\n  const countPage = 10;\r\n\r\n  const [modalBody, setModalBody] = useState(null);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const [filterVisible, setFilterVisible] = useState(false);\r\n  const [filterBody, setFilterBody] = useState(null);\r\n\r\n  const openModal = (body) => {\r\n    setModalBody(body);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      page: 0,\r\n      count: countPage,\r\n      categories,\r\n      subcategories,\r\n      tradetypes,\r\n      regions,\r\n      districts,\r\n      name: \"\",\r\n    };\r\n    setCurrentPage(0);\r\n    dispatch(getOrganizations(data));\r\n    dispatch(getOrganizationsCount(data)).then(\r\n      ({ payload: { totalCount }, error }) => {\r\n        if (!error) {\r\n          setTotalDatas(totalCount);\r\n        }\r\n      }\r\n    );\r\n  }, [\r\n    dispatch,\r\n    order,\r\n    categories,\r\n    subcategories,\r\n    tradetypes,\r\n    regions,\r\n    districts,\r\n    name,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      page: currentPage,\r\n      count: countPage,\r\n      categories,\r\n      subcategories,\r\n      tradetypes,\r\n      regions,\r\n      districts,\r\n      name: \"\",\r\n    };\r\n    dispatch(getOrganizations(data));\r\n    dispatch(getOrganizationsCount(data)).then(\r\n      ({ payload: { totalCount }, error }) => {\r\n        if (!error) {\r\n          setTotalDatas(totalCount);\r\n        }\r\n      }\r\n    );\r\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, order, currentPage, countPage]);\r\n\r\n  return (\r\n    <div className='w-full bg-white pb-[100px]'>\r\n      <div className='md:container'>\r\n        <div className='w-full block md:flex'>\r\n          <Filter\r\n            filterBody={filterBody}\r\n            filterVisible={filterVisible}\r\n            setFilterVisible={setFilterVisible}\r\n          />\r\n          <div className='w-full md:px-4 flex flex-col gap-[20px]'>\r\n            <PageHeader\r\n              isOrganization={isOrganization}\r\n              totalDatas={totalDatas}\r\n              countPage={countPage}\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              // filter={filter}\r\n              count={totalDatas}\r\n              onClick={() => navigate(\"/sign-up/business\")}\r\n              // handleFilter={handleFilter}\r\n              // filterData={product}\r\n              setFilterBody={setFilterBody}\r\n              setFilterVisible={setFilterVisible}\r\n              countTitle='Jami:'\r\n              mainTitle={\"Компании\"}\r\n              filterBtnClick={() => setFilterVisible(!filterVisible)}\r\n            />\r\n\r\n            {loading ? (\r\n              <Loading />\r\n            ) : (\r\n              <div className='grid grid-cols-1 px-2 gap-4 md:grid-cols-3 md:gap-3 pt-4'>\r\n                {map(\r\n                  organizations,\r\n                  ({\r\n                    _id,\r\n                    image,\r\n                    name,\r\n                    tradetypes,\r\n                    categories,\r\n                    subcategories,\r\n                    region,\r\n                    district,\r\n                    phone,\r\n                    email,\r\n                  }) => (\r\n                    <div\r\n                      key={uniqueId(\"organization\")}\r\n                      className='bg-white-900 overflow-hidden rounded shadow-lg border-t-8 border-[#01c2cc] flex flex-col justify-between'\r\n                    >\r\n                      <div className='border-neutral-400 mt-2 mx-4 flex gap-1'>\r\n                        <h3 className='text-[12px] font-semibold font-amazonbold'>\r\n                          {\" \"}\r\n                          {translations.savdo_turi}:\r\n                        </h3>\r\n                        <h4 className='text-[12px]'>\r\n                          {`${map(\r\n                            tradetypes,\r\n                            (tradetype) => tradetype.name\r\n                          ).join(\", \")}`}\r\n                        </h4>\r\n                      </div>\r\n                      <CardLogo\r\n                        logo={image}\r\n                        name={name}\r\n                        region={region}\r\n                        district={district}\r\n                      />\r\n                      <CardInfo\r\n                        translations={translations}\r\n                        _id={_id}\r\n                        isOrganization={!!organization}\r\n                        logged={logged}\r\n                        tradetypes={tradetypes}\r\n                        categories={categories}\r\n                        subcategories={subcategories}\r\n                        district={district}\r\n                        phone={phone}\r\n                        email={email}\r\n                        name={name}\r\n                        region={region}\r\n                      />\r\n                    </div>\r\n                  )\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    // <div className=\"h-full w-full  bg-neutral-100 flex flex-col justify-between\">\r\n    //   <div className=\"bg-white-900 py-3 shadow-md flex justify-between items-center px-4\">\r\n    //     <h3 className=\"font-amazonbold\">\r\n    //       {translations.tashkilotlar}:{\" \"}\r\n    //       <span className=\"text-primary-900\">{totalDatas} </span>\r\n    //     </h3>\r\n    //     {totalDatas > 0 && (\r\n    //       <Pagination\r\n    //         currentPage={currentPage}\r\n    //         countPage={countPage}\r\n    //         setCurrentPage={setCurrentPage}\r\n    //         totalDatas={totalDatas}\r\n    //       />\r\n    //     )}\r\n    //   </div>\r\n    //   <div className=\"h-full overflow-scroll p-4\">\r\n    //     <div className=\"grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-2 2xl:grid-cols-2 gap-4\">\r\n    //       {map(\r\n    //         organizations,\r\n    //         ({\r\n    //           _id,\r\n    //           image,\r\n    //           name,\r\n    //           tradetypes,\r\n    //           categories,\r\n    //           subcategories,\r\n    //           region,\r\n    //           district,\r\n    //           phone,\r\n    //           email,\r\n    //         }) => (\r\n    //           <div\r\n    //             key={uniqueId(\"organization\")}\r\n    //             className=\"bg-white-900 overflow-hidden rounded shadow-lg border-t-4 border-amber-500 flex flex-col justify-between\"\r\n    //           >\r\n    //             <CardLogo\r\n    //               logo={image}\r\n    //               name={name}\r\n    //               region={region}\r\n    //               district={district}\r\n    //             />\r\n    //             <CardInfo\r\n    //               translations={translations}\r\n    //               _id={_id}\r\n    //               isOrganization={!!organization}\r\n    //               logged={logged}\r\n    //               tradetypes={tradetypes}\r\n    //               categories={categories}\r\n    //               subcategories={subcategories}\r\n    //               region={region}\r\n    //               district={district}\r\n    //               phone={phone}\r\n    //               email={email}\r\n    //             />\r\n    //           </div>\r\n    //         )\r\n    //       )}\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Organizations;\r\n"],"names":["logo","name","district","region","className","src","alt","fill","size","stroke","viewBox","height","width","d","_id","phone","categories","subcategories","tradetypes","translations","logged","location","useLocation","useState","show","setShow","pathname","onClick","to","state","koproq_malumot","dispatch","useDispatch","t","useTranslation","getTranslations","navigate","useNavigate","useSelector","login","organization","userData","organizations","loading","isOrganization","filter","order","regions","districts","currentPage","setCurrentPage","totalDatas","setTotalDatas","filterVisible","setFilterVisible","filterBody","setFilterBody","useEffect","data","page","count","getOrganizations","getOrganizationsCount","then","totalCount","payload","error","Filter","PageHeader","countPage","countTitle","mainTitle","filterBtnClick","map","image","email","savdo_turi","tradetype","join","uniqueId"],"sourceRoot":""}