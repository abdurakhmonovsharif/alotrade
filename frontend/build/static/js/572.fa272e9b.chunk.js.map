{"version":3,"file":"static/js/572.fa272e9b.chunk.js","mappings":"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","sources":["Pages/CreateProduct/CreateProduct.js"],"sourcesContent":["import { filter, uniqueId } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport SaveButton from \"../../Components/Buttons/SaveButton\";\nimport CheckboxList from \"../../Components/CheckboxList/CheckboxList\";\nimport UploadImages from \"../../Components/ImageCrop/UploadImages\";\nimport Description from \"../../Components/Inputs/Description\";\nimport Input from \"../../Components/Inputs/Input\";\nimport MinMaxPrice from \"../../Components/MinMaxPrice/MinMaxPrice\";\nimport UniversalModal from \"../../Components/Modal/UniversalModal\";\nimport RadioButtonList from \"../../Components/RadioButtons/RadioButtonList\";\nimport SelectCategory from \"../../Components/Select/SelectCategory\";\nimport SelectRegion from \"../../Components/Select/SelectRegion\";\nimport { universalToast } from \"../../Components/ToastMessages/ToastMessages\";\nimport { currencices } from \"../../Config/globalConstants\";\nimport {\n  clearSubcategories,\n  getAllCategories,\n  getSubcategories,\n} from \"../Category/categorySlice\";\nimport Filter from \"../Filter/Filter\";\nimport {\n  clearFilters,\n  filterCategories,\n  filterSubcategories,\n  filterSubcategories2,\n} from \"../Filter/filterSlice\";\nimport { getAllregions } from \"../Filter/regionsSlice\";\nimport { checkRegisterProduct } from \"../User/Products/constants\";\nimport {\n  createProduct,\n  getProductById,\n  updateProduct,\n} from \"../User/Products/productSlice\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\n\nconst CreateProduct = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const productId = location?.state?.productId;\n\n  const { tradetypes } = useSelector((state) => state.trade);\n  const { loading } = useSelector((state) => state.login);\n  const { regions } = useSelector((state) => state.regions);\n  const { categoriesWithSubcategories } = useSelector(\n    (state) => state.categories\n  );\n  const {\n    categories: categoriesList,\n    subcategories: subcategoriesList,\n    subcategories2: subcategoriesList2,\n  } = useSelector((state) => state.filter);\n\n  const [isVisibleFilter, setIsVisibleFilter] = useState(false);\n\n  const [tradeTypes, setTradeTypes] = useState([]);\n  const [region, setRegion] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [statuses, setStatuses] = useState([]);\n  const [currency, setCurrency] = useState(\"UZS\");\n  const [districts, setDistricts] = useState([]);\n  const [images, setImages] = useState([]);\n  const [minPrice, setMinPrice] = useState(\"\");\n  const [maxPrice, setMaxPrice] = useState(\"\");\n  const [errors, setErrors] = useState(null);\n\n  const clearErrors = () => {\n    setErrors(null);\n  };\n\n  const changeHandler = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    name === \"name\" && setName(value);\n    name === \"description\" && setDescription(value);\n    name === \"minPrice\" && setMinPrice(value);\n    name === \"maxPrice\" && setMaxPrice(value);\n    clearErrors();\n  };\n\n  const selectRegion = (e) => {\n    clearErrors();\n    setRegion(e);\n    setDistricts(e.districts);\n  };\n\n  const selectDistrict = (e) => {\n    clearErrors();\n    setDistrict(e);\n  };\n\n  const changeTradeTypes = (e) => {\n    clearErrors();\n    const value = e.target.value;\n    const checked = e.target.checked;\n    const filtered = filter(tradeTypes, (tradeType) => tradeType !== value);\n    checked\n      ? setTradeTypes([...filtered, value])\n      : setTradeTypes([...filtered]);\n  };\n\n  const selectCategory = (e) => {\n    const value = e.value;\n    clearErrors();\n    setCategories(e);\n\n    dispatch(filterSubcategories([]));\n    dispatch(filterSubcategories2([]));\n    dispatch(filterCategories([value]));\n    dispatch(getSubcategories({ category: value }));\n  };\n\n  const changeCurrency = (e) => {\n    setCurrency(e.target.value);\n    clearErrors();\n  };\n\n  const enterHandler = (e) => {\n    clearErrors();\n    e.key === \"Enter\" && submitHandler();\n  };\n\n  const submitHandler = () => {\n    clearErrors();\n    const data = {\n      name,\n      description: description,\n      tradetypes: tradeTypes,\n      region: region.value,\n      district: district.value,\n      categories: categoriesList,\n      subcategories: subcategoriesList,\n      subcategories2: subcategoriesList2,\n      status: statuses,\n      currency,\n      images,\n      minPrice: Number(minPrice),\n      maxPrice: Number(maxPrice),\n    };\n    const check = checkRegisterProduct({ ...data, setErrors });\n    check &&\n      dispatch(\n        productId\n          ? updateProduct({ id: productId, ...data })\n          : createProduct({ ...data })\n      ).then(({ error }) => {\n        if (!error) {\n          productId\n            ? universalToast(\"Товар успешно изменен!\", \"success\")\n            : universalToast(\"Товар успешно создан!\", \"success\");\n          navigate(\"/profile/products\");\n          dispatch(clearFilters());\n        }\n      });\n  };\n\n  const setDatas = (product) => {\n    const {\n      tradetypes,\n      region,\n      district,\n      categories,\n      subcategories,\n      subcategories2,\n      status,\n      currency,\n      images,\n      minPrice,\n      maxPrice,\n      name,\n      description,\n    } = product;\n    const { districts } = region;\n    name && setName(name);\n    description && setDescription(description);\n    tradetypes && setTradeTypes(tradetypes);\n    region.label && setRegion(region);\n    district.label && setDistrict(district);\n    districts.length && setDistricts(districts);\n    categories && setCategories(categories[0] ? categories[0] : { value: \"\" });\n    status && setStatuses(status);\n    currency && setCurrency(currency);\n    images && setImages(images);\n    minPrice && setMinPrice(minPrice);\n    maxPrice && setMaxPrice(maxPrice);\n    if (categories.length > 0) {\n      categories && dispatch(filterCategories([categories[0].value]));\n      subcategories.length > 0 &&\n        dispatch(filterSubcategories([...subcategories.map((el) => el.value)]));\n      subcategories2.length > 0 &&\n        dispatch(\n          filterSubcategories2([...subcategories2.map((el) => el.value)])\n        );\n      dispatch(getSubcategories({ category: categories[0].value }));\n    }\n  };\n  useEffect(() => {\n    productId &&\n      dispatch(getProductById({ id: productId })).then(({ payload, error }) => {\n        if (error) {\n          UniversalModal(error.message, \"error\");\n        } else {\n          const { product } = payload;\n          setDatas(product);\n        }\n      });\n    return () => {\n      dispatch(filterSubcategories([]));\n      dispatch(filterSubcategories2([]));\n      dispatch(filterCategories([]));\n      dispatch(clearSubcategories());\n    };\n  }, [dispatch, productId]);\n\n  useEffect(() => {\n    dispatch(getAllCategories());\n    dispatch(getAllregions());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className='py-6'>\n        {isVisibleFilter && (\n          <div\n            className='fixed top-0 left-0 w-full h-full z-[100] bg-black bg-opacity-50 '\n            onClick={() => setIsVisibleFilter(false)}\n          >\n            <Filter\n              onClick={() => setIsVisibleFilter(false)}\n              setFilterVisible={() => setIsVisibleFilter(false)}\n              filterVisible={isVisibleFilter}\n            />\n          </div>\n        )}\n        <div className='container max-w-[800px]'>\n          <div className='text-[28px] text-alotrade font-bold mb-3 text-center'>\n            Карточка товара\n          </div>\n          {/* <CheckboxList\n            list={tradetypes}\n            checkedList={tradeTypes}\n            cols={2}\n            headerText=\"Тип торговли*\"\n            headerStyle=\"text-sm\"\n            listStyle=\"ml-0\"\n            onChange={changeTradeTypes}\n          /> */}\n          <SelectRegion\n            region={region}\n            selectRegion={selectRegion}\n            selectDistrict={selectDistrict}\n            district={district}\n            districts={districts}\n            regions={regions}\n            loading={loading}\n            labelRegion={\"Страна\"}\n            labelDistrict={\"Область\"}\n          />\n          <div className='grid grid-cols-1 md:grid-cols-2 w-full items-end gap-4 justify-center'>\n            <SelectCategory\n              // isMulti={true}\n              notShowSub={true}\n              categories={categories}\n              selectCategory={selectCategory}\n              categoriesWithSubcategories={categoriesWithSubcategories}\n              loading={loading}\n              labelCategory={\"Категория*\"}\n              openSubcategories={() => setIsVisibleFilter(!isVisibleFilter)}\n              kategoriya='Выбрать...'\n            />\n            <FormControl\n              size='small'\n              sx={{\n                \"@media (max-width: 600px)\": {\n                  width: \"130px\",\n                },\n                // marginTop: \"-20px\",\n              }}\n            >\n              <InputLabel\n                shrink={false}\n                InputLabelProps={{ shrink: false }}\n                id='trade-type-label'\n                sx={{ fontSize: \"14px\" }}\n              >\n                {tradeTypes.length == 0 && \"Тип торговля\"}\n              </InputLabel>\n              <Select\n                multiple\n                InputLabelProps={{ shrink: false }}\n                autoWidth={false}\n                sx={{\n                  boxShadow: \"none\",\n                  \".MuiOutlinedInput-notchedOutline\": { border: 0 },\n                  \"&.MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline\":\n                    {\n                      border: 0,\n                    },\n                  \"&.MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\n                    {\n                      border: 0,\n                    },\n                  border: 0,\n                  borderRadius: \"10px\",\n                  padding: 0,\n                  backgroundColor: \"#00C2CB4d\",\n                  textAlign: \"center\",\n                  fontSize: \"14px\",\n                  fontWeight: \"700\",\n                  color: \"#000\",\n                  width: \"100%\",\n                  overflow: \"hidden\",\n                }}\n                labelId='trade-type-label'\n                id='trade-type'\n                value={tradeTypes}\n                onChange={(e) => setTradeTypes(e.target.value)}\n              >\n                {/* <MenuItem value=''>\n                <em>{\"Выбрать тип торговли\"}</em>\n              </MenuItem> */}\n                {tradetypes &&\n                  tradetypes.map((el, index) => {\n                    return (\n                      <MenuItem key={index} value={el._id}>\n                        {el.name}\n                      </MenuItem>\n                    );\n                  })}\n              </Select>\n            </FormControl>\n          </div>\n          <Input\n            label='Название*'\n            labelStyle='font-normal'\n            placeholder='Название товара или услуги'\n            name='name'\n            onChange={changeHandler}\n            value={name}\n          />\n          <Description\n            name='description'\n            value={description}\n            onChange={changeHandler}\n            label='Описание*'\n            labelStyle='font-normal'\n            placeholder='Введите информацию'\n          />\n          <div className='grid grid-cols-2'>\n            {/*<CheckboxList*/}\n            {/*  onChange={changeStatus}*/}\n            {/*  list={positions}*/}\n            {/*  headerText=\"Holati*\"*/}\n            {/*  headerStyle=\"text-sm text-[#777]\"*/}\n            {/*  checkedList={statuses}*/}\n            {/*/>*/}\n            <RadioButtonList\n              currency={currency}\n              onChange={changeCurrency}\n              list={currencices}\n              label='Способ оплаты'\n              name={uniqueId(\"valyuta\")}\n            />\n            <MinMaxPrice\n              onChange={changeHandler}\n              minPrice={minPrice}\n              maxPrice={maxPrice}\n            />\n          </div>\n          <UploadImages images={images} setImages={setImages} />\n          <div className='text-sm text-red-600 font-amazonbold text-center'>\n            {errors && errors}\n          </div>\n          <div className='flex justify-center'>\n            <SaveButton\n              title={productId ? \"Изменить\" : \"Создать\"}\n              className='w-[200px] mt-3'\n              onClick={submitHandler}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CreateProduct;\n"],"names":["dispatch","useDispatch","location","useLocation","navigate","useNavigate","productId","state","tradetypes","useSelector","trade","loading","login","regions","categoriesWithSubcategories","categories","categoriesList","subcategories","subcategoriesList","subcategories2","subcategoriesList2","filter","isVisibleFilter","setIsVisibleFilter","useState","tradeTypes","setTradeTypes","region","setRegion","district","setDistrict","setCategories","name","setName","description","setDescription","statuses","setStatuses","currency","setCurrency","districts","setDistricts","images","setImages","minPrice","setMinPrice","maxPrice","setMaxPrice","errors","setErrors","clearErrors","changeHandler","e","target","value","submitHandler","data","status","Number","checkRegisterProduct","updateProduct","id","createProduct","then","error","universalToast","clearFilters","useEffect","getProductById","payload","UniversalModal","message","product","label","length","filterCategories","filterSubcategories","map","el","filterSubcategories2","getSubcategories","category","setDatas","clearSubcategories","getAllCategories","getAllregions","className","onClick","setFilterVisible","filterVisible","selectRegion","selectDistrict","labelRegion","labelDistrict","notShowSub","selectCategory","labelCategory","openSubcategories","kategoriya","size","sx","width","shrink","InputLabelProps","fontSize","multiple","autoWidth","boxShadow","border","borderRadius","padding","backgroundColor","textAlign","fontWeight","color","overflow","labelId","onChange","index","_id","labelStyle","placeholder","list","currencices","uniqueId","title"],"sourceRoot":""}