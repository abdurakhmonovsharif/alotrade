{"version":3,"file":"static/js/767.784892c4.chunk.js","mappings":"mSAgBA,MA0OA,EA1Oe,KAAO,IAAD,EACnB,MAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAqB,OAARF,QAAQ,IAARA,GAAe,QAAP,EAARA,EAAUG,aAAK,WAAP,EAAR,EAAiBC,OAC9B,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,CAAC,WACxBC,GAAeC,EAAAA,EAAAA,GAAgBH,GAC/BI,GAAaC,EAAAA,EAAAA,GAAOL,GACpBM,GAAWC,EAAAA,EAAAA,OACX,OACJC,EACAC,UAAU,KAAEC,EAAI,aAAEC,KAChBC,EAAAA,EAAAA,KAAad,GAAUA,EAAMe,SAC3B,OAAEC,EAAM,QAAEC,IAAYH,EAAAA,EAAAA,KAAad,GAAUA,EAAMgB,UACnD,MACJE,EAAK,WACLC,EAAU,cACVC,EAAa,eACbC,EAAc,WACdC,EAAU,QACVC,EAAO,UACPC,EAAS,KACTC,IACEX,EAAAA,EAAAA,KAAad,GAAUA,EAAMO,UAC1BmB,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,IAGtCK,EAAcC,IAAmBN,EAAAA,EAAAA,WAAS,IAC1CO,EAAWC,IAAgBR,EAAAA,EAAAA,UAAS,OAEpCS,EAAeC,IAAoBV,EAAAA,EAAAA,WAAS,IAC5CW,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,OAEtCa,EAAiBC,IAAsBd,EAAAA,EAAAA,WAAS,GAgBjDe,EAAiBC,IACrBjB,EAAWiB,GACXR,EAAa,WACbF,GAAgB,EAAK,EAGjBW,GAAeD,IACnBjB,EAAWiB,GACXR,EAAa,eACbF,GAAgB,EAAK,EAkFvB,OAhEAY,EAAAA,EAAAA,YAAU,KACRC,OAAOC,QAAQC,aAAa,CAAC,EAAGC,SAASC,OAEzCT,OAAiCU,GAAdrD,GAEnB+B,EAAe,GACf,MAAMuB,EAAO,CACXC,KAAM,EACNC,MA3Dc,GA4DdrC,QACAC,aACAC,gBACAC,iBACAC,WAAY,GACZC,UACAC,YACAZ,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM4C,IACZ/B,KAAM,IAER9B,GAAS8D,EAAAA,EAAAA,IAAUJ,IACnB1D,GAAS+D,EAAAA,EAAAA,IAAeL,IAAOM,MAC7B,IAAyC,IAAxC,MAAE1D,EAAO2D,SAAS,WAAEC,IAAc,EAC5B5D,GACH+B,EAAc6B,EAChB,GAEH,GAEA,CACD3C,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,KAGFqB,EAAAA,EAAAA,YAAU,KACR,MAAMO,EAAO,CACXC,KAAMzB,EACN0B,MA7Fc,GA8FdrC,QACAC,aACAC,gBACAC,iBACAC,WAAY,GACZC,UACAC,YACAZ,KAAU,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM4C,IACZ/B,KAAM,IAER9B,GAAS8D,EAAAA,EAAAA,IAAUJ,IACnB1D,GAAS+D,EAAAA,EAAAA,IAAeL,IAAOM,MAC7B,IAAyC,IAAxC,MAAE1D,EAAO2D,SAAS,WAAEC,IAAc,EAC5B5D,GACH+B,EAAc6B,EAChB,GAEH,GAEA,CAAClE,EAAUuB,EAAOW,EAjHH,MAoHhB,iBAAKiC,UAAU,wBAAuB,WACpC,gBAAKA,UAAU,eAAc,UAC3B,iBAAKA,UAAU,uBAAsB,WACnC,SAAC,IAAM,CACLvB,WAAYA,EACZF,cAAeA,EACfC,iBAAkBA,KAEpB,iBAAKwB,UAAU,+CAA8C,WAC3D,SAAC,IAAU,CACT1D,aAAcA,EACd2D,iBAAkBlD,EAClBgB,YAAaA,EACbmC,UAjIM,GAkINjC,WAAYA,EACZD,eAAgBA,EAChByB,MAAOxB,EACPkC,QAAS,KACHvD,EACFF,EAAS,kBApHvB4B,EAsHwB,iBArHxBF,GAAgB,GAChBP,EAAW,MAqHC,EAEFuC,WAAY9D,EAAa+D,KACzBC,YAAa,6CACbC,aA1GUC,IACpB,MAAMC,EAAQD,EAAEE,OAAOD,MACvB5E,GAAS8E,EAAAA,EAAAA,IAAYF,GAAO,EAyGlBjE,WAAYY,EACZX,OAAQD,EACRkC,cAAeA,EACfF,iBAAkBA,EAClBoC,UAAU,uCACVC,eAAgB,IAAMrC,GAAkBD,MAE1C,gBAAKyB,UAAU,wCAAuC,SACnD7C,GACC,SAAC,KAAO,KAER2D,EAAAA,EAAAA,KAAI5D,GAASE,IACX,SAAC,IAAS,CACRd,aAAcA,EACdM,OAAQA,EAERQ,MAAOA,EACP2B,YAAaA,GACbF,cAAeA,IAHVkC,EAAAA,EAAAA,iBAQZ9C,EAAa,IACZ,gBAAK+B,UAAU,2BAA0B,UACvC,SAAC,IAAU,CACTgB,YAAa,EACbC,QAAQ,WACRC,MAAM,UACNzB,MAAO0B,KAAKC,KAAKnD,EA5Kf,IA6KFuB,KAAMzB,EAAc,EACpBsD,SAAU,CAACC,EAAOb,KAChBzC,EAAeyC,EAAQ,EAAE,eASvC,SAAC,IAAc,CACbc,OAAQpD,EACRqD,KAAMnD,EACNoD,WAjLe,KACnBrD,GAAgB,EAAM,EAiLlBsD,YA9Kc,KAClBtD,GAAiBD,EAAa,EA8K1BwD,cAAe,OACf/D,QAASA,EACTS,UAAWA,EACXuD,WAAYtF,EAAauF,oBACzBxC,MAAO/C,EAAawF,sCACpBC,gBAzJkB,KACtBnE,GACE/B,GAASmG,EAAAA,EAAAA,IAAY,CAAElD,GAAIlB,KAAYiC,MAAK,IAAgB,IAAf,MAAE1D,GAAO,EAC/CA,IACHiC,GAAgB,GAChBP,EAAW,MACb,GACA,KAqJF,SAAC,IAAc,CACb2D,KAAM,aACND,OAAQ5C,EACR8C,WAAY,IAAM7C,GAAmB,GACrC8C,YAAa,IAAM9C,GAAmB,OAEpC,C","sources":["Pages/User/Orders/Orders.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport UniversalModal from \"../../../Components/Modal/UniversalModal\";\nimport PageHeader from \"../../../Components/PageHeaders/PageHeader\";\nimport OrderCard from \"../../../Components/OrderCard/OrderCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteOrder, getOrdersCount, getOrders } from \"./orderSlice\";\nimport { map, uniqueId } from \"lodash\";\nimport { filterOrder } from \"../../Filter/filterSlice\";\nimport { filter } from \"./constants\";\nimport { useTranslation } from \"react-i18next\";\nimport { getTranslations } from \"../../../translation\";\nimport Filter from \"../../Filter/Filter\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Pagination } from \"@mui/material\";\nimport { Loading } from \"@nextui-org/react\";\n\nconst Orders = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const errorMoney = location?.state?.error;\n  const { t } = useTranslation([\"common\"]);\n  const translations = getTranslations(t);\n  const filterData = filter(t);\n  const navigate = useNavigate();\n  const {\n    logged,\n    userData: { user, organization },\n  } = useSelector((state) => state.login);\n  const { orders, loading } = useSelector((state) => state.orders);\n  const {\n    order,\n    categories,\n    subcategories,\n    subcategories2,\n    tradetypes,\n    regions,\n    districts,\n    name,\n  } = useSelector((state) => state.filter);\n  const [orderId, setOrderId] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalDatas, setTotalDatas] = useState(0);\n  const countPage = 10;\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalBody, setModalBody] = useState(null);\n\n  const [filterVisible, setFilterVisible] = useState(false);\n  const [filterBody, setFilterBody] = useState(null);\n\n  const [modalVisibleOrg, setModalVisibleOrg] = useState(false);\n\n  const closeHandler = () => {\n    setModalVisible(false);\n  };\n\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  const openModal = (body) => {\n    setModalBody(body);\n    setModalVisible(true);\n    setOrderId(null);\n  };\n\n  const deleteHandler = (id) => {\n    setOrderId(id);\n    setModalBody(\"approve\");\n    setModalVisible(true);\n  };\n\n  const editHandler = (id) => {\n    setOrderId(id);\n    setModalBody(\"createOrder\");\n    setModalVisible(true);\n  };\n\n  const handleFilter = (e) => {\n    const value = e.target.value;\n    dispatch(filterOrder(value));\n  };\n\n  const deleteOrderById = () => {\n    orderId &&\n      dispatch(deleteOrder({ id: orderId })).then(({ error }) => {\n        if (!error) {\n          setModalVisible(false);\n          setOrderId(null);\n        }\n      });\n  };\n\n  useEffect(() => {\n    window.history.replaceState({}, document.title);\n\n    setModalVisibleOrg(errorMoney == undefined ? false : true);\n\n    setCurrentPage(0);\n    const data = {\n      page: 0,\n      count: countPage,\n      order,\n      categories,\n      subcategories,\n      subcategories2,\n      tradetypes: [],\n      regions,\n      districts,\n      user: user?._id,\n      name: \"\",\n    };\n    dispatch(getOrders(data));\n    dispatch(getOrdersCount(data)).then(\n      ({ error, payload: { totalCount } }) => {\n        if (!error) {\n          setTotalDatas(totalCount);\n        }\n      }\n    );\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    order,\n    categories,\n    subcategories,\n    subcategories2,\n    tradetypes,\n    regions,\n    districts,\n    name,\n  ]);\n\n  useEffect(() => {\n    const data = {\n      page: currentPage,\n      count: countPage,\n      order,\n      categories,\n      subcategories,\n      subcategories2,\n      tradetypes: [],\n      regions,\n      districts,\n      user: user?._id,\n      name: \"\",\n    };\n    dispatch(getOrders(data));\n    dispatch(getOrdersCount(data)).then(\n      ({ error, payload: { totalCount } }) => {\n        if (!error) {\n          setTotalDatas(totalCount);\n        }\n      }\n    );\n    //    eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, order, currentPage, countPage]);\n\n  return (\n    <div className='w-full bg-white pb-10'>\n      <div className='md:container'>\n        <div className='w-full block md:flex'>\n          <Filter\n            filterBody={filterBody}\n            filterVisible={filterVisible}\n            setFilterVisible={setFilterVisible}\n          />\n          <div className='w-full px-4 md:px-4 flex flex-col gap-[20px]'>\n            <PageHeader\n              translations={translations}\n              isOrganization={!!organization}\n              currentPage={currentPage}\n              countPage={countPage}\n              totalDatas={totalDatas}\n              setCurrentPage={setCurrentPage}\n              count={totalDatas}\n              onClick={() => {\n                if (logged) {\n                  navigate(\"/create_order\");\n                } else {\n                  openModal(\"warningSignIn\");\n                }\n              }}\n              countTitle={translations.jami}\n              buttonTitle={\"Создать\"}\n              handleFilter={handleFilter}\n              filterData={order}\n              filter={filterData}\n              setFilterBody={setFilterBody}\n              setFilterVisible={setFilterVisible}\n              mainTitle='Заявки'\n              filterBtnClick={() => setFilterVisible(!filterVisible)}\n            />\n            <div className='px-0 md:px-4 flex flex-col gap-[20px]'>\n              {loading ? (\n                <Loading />\n              ) : (\n                map(orders, (order) => (\n                  <OrderCard\n                    translations={translations}\n                    logged={logged}\n                    key={uniqueId()}\n                    order={order}\n                    editHandler={editHandler}\n                    deleteHandler={deleteHandler}\n                  />\n                ))\n              )}\n            </div>\n            {totalDatas > 0 && (\n              <div className='flex justify-center py-2'>\n                <Pagination\n                  defaultPage={1}\n                  variant='outlined'\n                  color='primary'\n                  count={Math.ceil(totalDatas / countPage)}\n                  page={currentPage + 1}\n                  onChange={(event, value) => {\n                    setCurrentPage(value - 1);\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <UniversalModal\n        isOpen={modalVisible}\n        body={modalBody}\n        closeModal={closeHandler}\n        toggleModal={toggleModal}\n        typeOfWarning={\"user\"}\n        orderId={orderId}\n        modalBody={modalBody}\n        headerText={translations.buyurtmani_ochirish}\n        title={translations.siz_buyurtmani_ochirishni_xohlaysizmi}\n        approveFunction={deleteOrderById}\n      />\n\n      <UniversalModal\n        body={\"warningOrg\"}\n        isOpen={modalVisibleOrg}\n        closeModal={() => setModalVisibleOrg(false)}\n        toggleModal={() => setModalVisibleOrg(false)}\n      />\n    </div>\n  );\n};\n\nexport default Orders;\n"],"names":["dispatch","useDispatch","location","useLocation","errorMoney","state","error","t","useTranslation","translations","getTranslations","filterData","filter","navigate","useNavigate","logged","userData","user","organization","useSelector","login","orders","loading","order","categories","subcategories","subcategories2","tradetypes","regions","districts","name","orderId","setOrderId","useState","currentPage","setCurrentPage","totalDatas","setTotalDatas","modalVisible","setModalVisible","modalBody","setModalBody","filterVisible","setFilterVisible","filterBody","setFilterBody","modalVisibleOrg","setModalVisibleOrg","deleteHandler","id","editHandler","useEffect","window","history","replaceState","document","title","undefined","data","page","count","_id","getOrders","getOrdersCount","then","payload","totalCount","className","isOrganization","countPage","onClick","countTitle","jami","buttonTitle","handleFilter","e","value","target","filterOrder","mainTitle","filterBtnClick","map","uniqueId","defaultPage","variant","color","Math","ceil","onChange","event","isOpen","body","closeModal","toggleModal","typeOfWarning","headerText","buyurtmani_ochirish","siz_buyurtmani_ochirishni_xohlaysizmi","approveFunction","deleteOrder"],"sourceRoot":""}